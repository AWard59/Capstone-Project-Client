{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/courses.js","components/author/course/CreateCourse.js","components/author/course/ViewCourses.js","api/modules.js","api/user.js","components/author/course/ViewCourseId.js","components/user/Profile.js","components/author/module/CreateModule.js","components/author/module/ViewModuleId.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","userType","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","isUserType","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","setUserType","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Check","inline","defaultChecked","label","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createCourse","description","course","getCourses","get","getCourseById","editCourse","deleteCourse","CreateCourse","courseName","setCourseName","courseDescription","setCourseDescription","onCreateCourse","as","rows","Courses","courses","setCourses","loading","setLoading","renderedCourses","map","listCourses","Spinner","animation","createModule","content","module","getModules","getModuleById","editModule","deleteModule","profileUpdate","firstName","lastName","userData","profileView","getTutors","assignTutor","tutor","assign","getAssignedTutors","Course","setCourse","showCourseEdit","setShowCourseEdit","modules","setModules","assignedTutors","setAssignedTutors","tutors","setTutors","showAssignTutors","setShowAssignTutors","newTutor","setNewTutor","navigateBack","setShouldNavigateBack","navigateAddModule","setShouldNavigateAddModule","reRender","setReRender","courseId","useParams","resMod","resTut","assigned_tutors","error","onEditCourse","onDelete","handleShowAssignTutors","state","renderedModules","m","listModules","renderedTutors","tut","listTutors","tmap","t","i","onAssignTutor","onClick","Modal","onHide","closeButton","Title","Body","FloatingLabel","Footer","aria-label","handleAss","Profile","setFirstName","setLastName","onUpdateProfile","CreateModule","moduleName","setModuleName","moduleContent","setModuleContent","useLocation","onCreateModule","Module","setModule","showModuleEdit","setShowModuleEdit","moduleId","onEditModule","App","msgAlerts","setMsgAlerts","isStudent","setIsStudent","isTutor","setIsTutor","isAuthor","setIsAuthor","uuid","path","element","ViewCourses","ViewCourseId","ViewModuleId","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0b585b4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Courses</NavLink>\n    <NavLink to='/courses/create/' className='nav-link'>Add Course</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user, userType }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\nE-Learning\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}({userType})</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://capstone-proj-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation, isUserType) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    },\n    userType: isUserType\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [userType, setUserType] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation, userType)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <br />\n\n          <Form.Group controlId='userType'>\n            <Form.Label>User Type</Form.Label>\n            <div key={'inline-radio}'} className='mb-3'>\n              <Form.Check\n                inline\n                defaultChecked\n                label='Student'\n                name='userType'\n                value='is_student'\n                type='radio'\n                id={'inline-radio}-1'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Tutor'\n                name='userType'\n                value='is_tutor'\n                type='radio'\n                id={'inline-radio}-2'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Author'\n                name='userType'\n                value='is_author'\n                type='radio'\n                id={'inline-radio}-3'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n            </div>\n          </Form.Group>\n\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createCourse = (user, name, description) => {\n  return axios.post(apiUrl + '/courses/create/', {\n    course: {\n      name,\n      description\n    }\n  }, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourses = (user) => {\n  return axios.get(apiUrl + '/courses/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseById = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editCourse = (user, id, name, description) => {\n  return axios.patch(\n    apiUrl + `/courses/${id}/`, {\n      course: {\n        name,\n        description\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const deleteCourse = (user, id) => {\n  return axios.delete(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { createCourse } from '../../../api/courses'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateCourse = ({ msgAlert, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n\n  const onCreateCourse = async (event) => {\n    event.preventDefault()\n\n    try {\n      await createCourse(user, courseName, courseDescription)\n      msgAlert({\n        heading: 'Course Creation Successful!',\n        message: `Course ${courseName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Course Failed with error: ' + error.message,\n        message: 'Failed to create a new course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Course</h3>\n        <Form onSubmit={onCreateCourse}>\n          <Form.Group controlId='courseName'>\n            <Form.Label>Course Name</Form.Label>\n            <Form.Control\n              required\n              name='courseName'\n              value={courseName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setCourseName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='courseDescription'>\n            <Form.Label>Course Description</Form.Label>\n            <Form.Control\n              required\n              name='courseDescription'\n              value={courseDescription}\n              type='text'\n              as='textarea'\n              rows='6'\n              placeholder='Course Description'\n              onChange={(event) => setCourseDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateCourse\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport { getCourses } from '../../../api/courses'\n\nconst Courses = ({ msgAlert, user }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getCourses(user)\n      setCourses(res.data.courses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please Add Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map(course => {\n    return (\n      <li key={course.id}>\n        <Link to={`/courses/${course.id}/`}>\n          <h3>{course.name}</h3>\n          <h5>{course.description}</h5>\n        </Link>\n      </li>\n    )\n  })\n\n  const listCourses = <ul>{renderedCourses}</ul>\n\n  return (\n    <>\n      <h3>Courses:</h3>\n      {!loading\n        ? (\n          listCourses\n        )\n        : (\n          <Spinner animation='border' variant='primary' />\n        )}\n    </>\n  )\n}\n\nexport default Courses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createModule = (user, name, content, course) => {\n  console.log(user, name, content, course)\n  return axios.post(\n    apiUrl + `/courses/${course}/modules/create/`, {\n      module: {\n        name,\n        content,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModuleById = (user, id, course) => {\n  return axios.get(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editModule = (user, id, name, content, course) => {\n  return axios.patch(\n    apiUrl + `/courses/modules/${id}/`,\n    {\n      module: {\n        course,\n        name,\n        content\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteModule = (user, id, course) => {\n  return axios.delete(apiUrl + `/courses/${course}/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const profileUpdate = (firstName, lastName, user) => {\n  return axios.patch(\n    apiUrl + '/profile/',\n    {\n      userData: {\n        firstName,\n        lastName\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const profileView = (user) => {\n  return axios.get(\n    apiUrl + '/profile/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getTutors = (user) => {\n  return axios.get(\n    apiUrl + '/tutors/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const assignTutor = (user, tutor, course) => {\n  console.log('user', user)\n  console.log('tutor', tutor)\n  console.log('course', course)\n  return axios.post(\n    apiUrl + '/tutors/assign/',\n    {\n      assign: {\n        tutor,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getAssignedTutors = (user, course) => {\n  return axios.get(\n    apiUrl + `/courses/${course}/tutors/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getCourseById, editCourse, deleteCourse } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getTutors, assignTutor, getAssignedTutors } from '../../../api/user'\n\nconst Course = ({ msgAlert, user }) => {\n  const [course, setCourse] = useState([])\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [showCourseEdit, setShowCourseEdit] = useState(false)\n  const [modules, setModules] = useState([])\n  const [assignedTutors, setAssignedTutors] = useState([])\n  const [tutors, setTutors] = useState([])\n  const [showAssignTutors, setShowAssignTutors] = useState(false)\n  const [newTutor, setNewTutor] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      setCourseName(res.data.course.name)\n      setCourseDescription(res.data.course.description)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resTut = await getAssignedTutors(user, courseId.id)\n          setAssignedTutors(resTut.data.assigned_tutors)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditCourse = async (event) => {\n    event.preventDefault()\n    try {\n      await editCourse(user, courseId.id, courseName, courseDescription)\n      setShowCourseEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Course Edit Successful!',\n        message: `Course ${courseName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Course Failed with error: ' + error.message,\n        message: 'Failed to edit the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteCourse(user, courseId.id)\n      setShowCourseEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Course Deletion Successful!',\n        message: `Course ${courseName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Course Failed with error: ' + error.message,\n        message: 'Failed to delete the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const handleShowAssignTutors = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await getTutors(user)\n      setTutors(res.data.tutors)\n      setShowAssignTutors(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to='/courses/' />\n  }\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId.id }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  const renderedTutors = assignedTutors.map((tut) => {\n    return (\n      <li key={tut.id}>\n        <p>{tut.tutor.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listTutors = <ol className='container'>{renderedTutors}</ol>\n\n  const tmap = tutors.map((t, i) => {\n    return (\n      <option key={t.id} value={i}>{t.email}</option>\n    )\n  })\n\n  const handleAss = (event) => setNewTutor(tutors[event.target.value])\n\n  const onAssignTutor = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await assignTutor(user, newTutor.id, courseId.id)\n      console.log(res)\n      setShowAssignTutors(false)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{course.name}</h2>\n                <h5>{course.description}</h5>\n                <Button onClick={() => setShowCourseEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n                <br />\n                <br />\n              </div>\n              <br />\n              <div className='container shadow'>\n                <h5>Tutors:</h5>\n                {listTutors}\n                <Button onClick={handleShowAssignTutors}>Assign Tutors</Button>\n                <br />\n                <br />\n              </div>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showCourseEdit} onHide={() => setShowCourseEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Course Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='courseName'>\n                <FloatingLabel label='Course Name'>\n                  <Form.Control\n                    required\n                    name='courseName'\n                    value={courseName}\n                    type='text'\n                    placeholder='Course Name'\n                    onChange={(event) => setCourseName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='courseDescription'>\n                <FloatingLabel label='Course Description'>\n                  <Form.Control\n                    required\n                    name='courseDescription'\n                    value={courseDescription}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Course Description'\n                    onChange={(event) =>\n                      setCourseDescription(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowCourseEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditCourse}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      {/* Tutor Assign Modal */}\n      <div>\n        <Modal\n          show={showAssignTutors}\n          onHide={() => setShowAssignTutors(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Assign Tutor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FloatingLabel label='Assign Tutor'>\n              <Form.Control\n                aria-label='Default select example'\n                as='select'\n                value={tmap.value}\n                onChange={(event) => handleAss(event)}\n              >\n                options={tmap}\n              </Form.Control>\n            </FloatingLabel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={onAssignTutor}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { profileUpdate, profileView } from '../../api/user'\n\nconst Profile = ({ msgAlert, user }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const res = await profileView(user)\n      console.log(res.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onUpdateProfile = async (event) => {\n    event.preventDefault()\n\n    try {\n      await profileUpdate(firstName, lastName, user)\n      // msgAlert({\n      //   heading: 'Change Password Success',\n      //   message:\n      //   variant: 'success'\n      // })\n      setShouldNavigate(true)\n    } catch (error) {\n      // msgAlert({\n      //   heading: 'Change Password Failed with error: ' + error.message,\n      //   message:\n      //   variant: 'danger'\n      // })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Update profile</h3>\n        <Form onSubmit={onUpdateProfile}>\n          <Form.Group controlId='firstName'>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              name='firstName'\n              value={firstName}\n              type='text'\n              placeholder='First Name'\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='lastName'>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              name='lastName'\n              value={lastName}\n              type='text'\n              placeholder='Last Name'\n              onChange={(event) => setLastName(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nUpdate\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\n\nimport { createModule } from '../../../api/modules'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateModule = ({ msgAlert, user }) => {\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const location = useLocation()\n  const courseId = location.state.value\n\n  const onCreateModule = async (event) => {\n    event.preventDefault()\n    try {\n      await createModule(user, moduleName, moduleContent, courseId.id)\n      msgAlert({\n        heading: 'Module Creation Successful!',\n        message: `Module ${moduleName} Created Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Module Failed with error: ' + error.message,\n        message: 'Failed to create a new Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Module</h3>\n        <Form onSubmit={onCreateModule}>\n          <Form.Group controlId='moduleName'>\n            <Form.Label>Module Name</Form.Label>\n            <Form.Control\n              required\n              name='moduleName'\n              value={moduleName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setModuleName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='moduleContent'>\n            <Form.Label>Module Content</Form.Label>\n            <Form.Control\n              required\n              name='moduleContent'\n              value={moduleContent}\n              type='text'\n              as='textarea'\n              rows='10'\n              placeholder='Module Content'\n              onChange={(event) => setModuleContent(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateModule\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getModuleById, editModule, deleteModule } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user }) => {\n  const [module, setModule] = useState([])\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [showModuleEdit, setShowModuleEdit] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n      setModuleName(res.data.module.name)\n      setModuleContent(res.data.module.content)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditModule = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await editModule(user, moduleId.id, moduleName, moduleContent, courseId)\n      console.log(res.data)\n      setShowModuleEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Module Edit Successful!',\n        message: `Module ${moduleName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Module Failed with error: ' + error.message,\n        message: 'Failed to edit the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteModule(user, moduleId.id, courseId)\n      setShowModuleEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Module Deletion Successful!',\n        message: `Module ${moduleName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Module Failed with error: ' + error.message,\n        message: 'Failed to delete the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{module.name}</h2>\n                <h5>{module.content}</h5>\n                <Button onClick={() => setShowModuleEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showModuleEdit} onHide={() => setShowModuleEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Module Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='moduleName'>\n                <FloatingLabel label='Module Name'>\n                  <Form.Control\n                    required\n                    name='moduleName'\n                    value={moduleName}\n                    type='text'\n                    placeholder='Module Name'\n                    onChange={(event) => setModuleName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='moduleContent'>\n                <FloatingLabel label='Module Content'>\n                  <Form.Control\n                    required\n                    name='moduleContent'\n                    value={moduleContent}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Module Content'\n                    onChange={(event) =>\n                      setModuleContent(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowModuleEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditModule}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","/* eslint-disable no-tabs */\nimport React, { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateCourse from './components/author/course/CreateCourse'\nimport ViewCourses from './components/author/course/ViewCourses'\nimport ViewCourseId from './components/author/course/ViewCourseId'\nimport Profile from './components/user/Profile'\nimport CreateModule from './components/author/module/CreateModule'\nimport ViewModuleId from './components/author/module/ViewModuleId'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [isStudent, setIsStudent] = useState(null)\n  const [isTutor, setIsTutor] = useState(null)\n  const [isAuthor, setIsAuthor] = useState(null)\n  const [userType, setUserType] = useState(null)\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  useEffect(() => {\n    if (user) {\n      if (user.isStudent) {\n        setIsStudent(true)\n        setUserType('Student')\n        console.log(isStudent)\n      } else if (user.isTutor) {\n        setIsTutor(true)\n        setUserType('Tutor')\n        console.log(isTutor)\n      } else if (user.isAuthor) {\n        setIsAuthor(true)\n        setUserType('Author')\n        console.log(isAuthor)\n      }\n    }\n  }, [user])\n\n  return (\n    <>\n      <Header user={user} userType={userType}/>\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up/'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in/'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out/'\n            element={\n              <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />}\n          />\n          <Route\n            path='/change-password/'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/profile/'\n            element={<Profile msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/courses/create/'\n            element={<CreateCourse msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/courses/'\n            element={<ViewCourses user={user} />}\n          />\n          <Route\n            path='/courses/:id/'\n            element={<ViewCourseId msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/courses/:id/modules/create/'\n            element={<CreateModule msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/courses/modules/:id/'\n            element={<ViewModuleId msgAlert={msgAlert} user={user} />}\n          />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}