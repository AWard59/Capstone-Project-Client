{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","components/Header/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/courses.js","components/author/course/CreateCourse.js","components/author/course/ViewCourses.js","components/student/course/ViewCoursesEnrolled.js","api/modules.js","api/user.js","components/author/course/ViewCourseId.js","components/user/Profile.js","components/author/module/CreateModule.js","components/author/module/ViewModuleId.js","components/student/course/ViewCourseId.js","components/student/module/ViewModuleId.js","components/tutor/course/ViewCourseId.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authorOptions","to","tutorOptions","studentOptions","unauthenticatedOptions","Header","user","userType","Navbar","bg","expand","Container","Brand","style","color","textDecoration","src","Toggle","aria-controls","Collapse","Nav","email","Home","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","isUserType","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","setUserType","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Check","inline","label","Button","SignIn","onSignIn","SignOut","clearUser","clearUserType","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createCourse","description","course","getCourses","get","getCoursesStudent","getCoursesTutor","getCourseById","editCourse","deleteCourse","enrolCourse","enrol","student","getEnrolledCourses","CreateCourse","courseName","setCourseName","courseDescription","setCourseDescription","onCreateCourse","as","rows","Courses","courses","setCourses","loading","setLoading","renderedCourses","map","onClick","handleEnrol","listCourses","Spinner","animation","mapCourses","enrolled_courses","c","createModule","content","module","getModules","getModuleById","editModule","deleteModule","completeModule","complete","module_complete","getCompleteModules","profileUpdate","firstName","lastName","userData","first_name","last_name","profileView","getTutors","assignTutor","tutor","assign","getAssignedTutors","getEnrolledStudents","Course","setCourse","showCourseEdit","setShowCourseEdit","modules","setModules","assignedTutors","setAssignedTutors","tutors","setTutors","showAssignTutors","setShowAssignTutors","newTutor","setNewTutor","navigateBack","setShouldNavigateBack","navigateAddModule","setShouldNavigateAddModule","reRender","setReRender","courseId","useParams","resMod","resTut","assigned_tutors","error","onEditCourse","onDelete","handleShowAssignTutors","filteredTutors","filter","tutorFilterFunc","list","length","state","renderedModules","m","listModules","renderedTutors","tut","listTutors","tmap","t","i","onAssignTutor","undefined","Modal","onHide","closeButton","Title","Body","FloatingLabel","Footer","handleAss","Profile","setFirstName","setLastName","onUpdateProfile","CreateModule","moduleName","setModuleName","moduleContent","setModuleContent","useLocation","onCreateModule","Module","setModule","showModuleEdit","setShowModuleEdit","moduleId","onEditModule","completedModules","setCompletedModules","resModCompleted","completed_module","cm","includes","completed","setCompleted","moduleCompleted","onCompleteModule","textAlign","position","bottom","right","fontWeight","cursor","enrolledStudents","setEnrolledStudents","resStu","enrolled_students","renderedStudents","stu","listStudents","App","msgAlerts","setMsgAlerts","uuid","isStudent","isTutor","isAuthor","studentRoutes","path","element","ViewCoursesEnrolled","tutorRoutes","ViewModuleId","authorRoutes","ViewCourseId","ViewCourses","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0263c601.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport '../../assets/navStyle.css'\n\nconst authorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/courses/create/' className='nav-link'>Add Course</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst tutorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst studentOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Find A Course</NavLink>\n    <NavLink to='/courses/enrolled/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n    <NavLink to='/sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst Header = ({ user, userType }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/courses/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          <img className='navLogo' src='https://i.imgur.com/E9e7s2r.png'></img>\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>\nWelcome, {user.email}({userType})\n            </span>\n          )}\n          {userType === 'Student'\n            ? studentOptions\n            : userType === 'Tutor'\n              ? tutorOptions\n              : userType === 'Author'\n                ? authorOptions\n                : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <br />\n      <div className='container'>\n        <h1>Welcome to Only Exams!</h1>\n        <br/>\n        <h5>If you are new, sign up now to have access to all of our courses.</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://capstone-proj-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation, isUserType) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    },\n    userType: isUserType\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [userType, setUserType] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      await signUp(email, password, passwordConfirmation, userType)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/profile/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <br />\n\n          <Form.Group controlId='userType'>\n            <Form.Label>User Type</Form.Label>\n            <div key={'inline-radio}'} className='mb-3'>\n              <Form.Check\n                inline\n                label='Student'\n                name='userType'\n                value='is_student'\n                type='radio'\n                id={'inline-radio}-1'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Tutor'\n                name='userType'\n                value='is_tutor'\n                type='radio'\n                id={'inline-radio}-2'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Author'\n                name='userType'\n                value='is_author'\n                type='radio'\n                id={'inline-radio}-3'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n            </div>\n          </Form.Group>\n\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, clearUserType, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      clearUserType()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createCourse = (user, name, description) => {\n  return axios.post(apiUrl + '/courses/create/', {\n    course: {\n      name,\n      description\n    }\n  }, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourses = (user) => {\n  return axios.get(apiUrl + '/courses/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesStudent = (user) => {\n  return axios.get(apiUrl + '/courses/available/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesTutor = (user) => {\n  return axios.get(apiUrl + '/courses/assigned/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseById = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editCourse = (user, id, name, description) => {\n  return axios.patch(\n    apiUrl + `/courses/${id}/`, {\n      course: {\n        name,\n        description\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const deleteCourse = (user, id) => {\n  return axios.delete(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const enrolCourse = (user, course) => {\n  return axios.post(\n    apiUrl + `/courses/${course}/enrol/`,\n    {\n      enrol: {\n        student: user.id,\n        course\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledCourses = (user) => {\n  return axios.get(\n    apiUrl + '/courses/enrolled/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { createCourse } from '../../../api/courses'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateCourse = ({ msgAlert, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n\n  const onCreateCourse = async (event) => {\n    event.preventDefault()\n\n    try {\n      await createCourse(user, courseName, courseDescription)\n      msgAlert({\n        heading: 'Course Creation Successful!',\n        message: `Course ${courseName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Course Failed with error: ' + error.message,\n        message: 'Failed to create a new course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Course</h3>\n        <Form onSubmit={onCreateCourse}>\n          <Form.Group controlId='courseName'>\n            <Form.Label>Course Name</Form.Label>\n            <Form.Control\n              required\n              name='courseName'\n              value={courseName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setCourseName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='courseDescription'>\n            <Form.Label>Course Description</Form.Label>\n            <Form.Control\n              required\n              name='courseDescription'\n              value={courseDescription}\n              type='text'\n              as='textarea'\n              rows='6'\n              placeholder='Course Description'\n              onChange={(event) => setCourseDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateCourse\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\n\nimport { getCourses, enrolCourse, getCoursesStudent, getCoursesTutor } from '../../../api/courses'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      if (userType === 'Student') {\n        const res = await getCoursesStudent(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else if (userType === 'Tutor') {\n        const res = await getCoursesTutor(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else {\n        const res = await getCourses(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      }\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses available right now.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map(course => {\n    if (userType === 'Student') {\n      return (\n        <li key={course.id}>\n          <div className='container'>\n            <h1>{course.name}</h1>\n            <h5>{course.description}</h5>\n            <Button\n              variant='success'\n              value={course.id}\n              onClick={(event) => handleEnrol(event)}>\nEnrol\n            </Button>\n            <hr />\n          </div>\n        </li>\n      )\n    } else if (userType === 'Tutor') {\n      return (\n        <li key={course.course.id}>\n          <div className='container'>\n            <Link to={`/courses/${course.course.id}/`}>\n              <h1>{course.course.name}</h1>\n            </Link>\n            <h5>{course.course.description}</h5>\n            <hr />\n          </div>\n        </li>\n      )\n    } else {\n      return (\n        <li key={course.id}>\n          <div className='container'>\n            <Link to={`/courses/${course.id}/`}>\n              <h1>{course.name}</h1>\n            </Link>\n            <h5>{course.description}</h5>\n            <hr />\n          </div>\n        </li>\n      )\n    }\n  })\n  const listCourses = <ul>{renderedCourses}</ul>\n\n  const handleEnrol = async (event) => {\n    try {\n      await enrolCourse(user, event.target.value)\n      msgAlert({\n        heading: 'Successfully enrolled!',\n        message: 'You have successfully enrolled in this course!',\n        variant: 'success'\n      })\n    } catch {\n      msgAlert({\n        heading: 'Error enrolling',\n        message: 'There was an error enrolling in this course.',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <h3>Courses:</h3>\n      {!loading\n        ? (\n          listCourses\n        )\n        : (\n          <Spinner animation='border' variant='primary' />\n        )}\n    </>\n  )\n}\n\nexport default Courses\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\n\nimport Spinner from 'react-bootstrap/Spinner'\n// import Button from 'react-bootstrap/Button'\n\nimport { getEnrolledCourses } from '../../../api/courses'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getEnrolledCourses(user)\n      const mapCourses = res.data.enrolled_courses.map(c => {\n        return {\n          id: c.course.id,\n          name: c.course.name,\n          description: c.course.description\n        }\n      })\n      setCourses(mapCourses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please enrol in a Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map((course) => {\n    return (\n      <li key={course.id}>\n        <div className='container'>\n          <Link to={`/courses/${course.id}/`}>\n            <h1>{course.name}</h1>\n          </Link>\n          <h5>{course.description}</h5>\n          <hr />\n        </div>\n      </li>\n    )\n  })\n\n  const listCourses = <ul>{renderedCourses}</ul>\n\n  return (\n    <>\n      <h3>Your Enrolled Courses:</h3>\n      {!loading\n        ? (\n          listCourses\n        )\n        : (\n          <Spinner animation='border' variant='primary' />\n        )}\n    </>\n  )\n}\n\nexport default Courses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createModule = (user, name, content, course) => {\n  return axios.post(\n    apiUrl + '/courses/modules/create/', {\n      module: {\n        name,\n        content,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModuleById = (user, id, course) => {\n  return axios.get(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editModule = (user, id, name, content, course) => {\n  return axios.patch(\n    apiUrl + `/courses/modules/${id}/`,\n    {\n      module: {\n        course,\n        name,\n        content\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteModule = (user, id) => {\n  return axios.delete(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const completeModule = (user, module) => {\n  return axios.post(\n    apiUrl + `/courses/modules/${module}/complete/`,\n    {\n      complete: {\n        module_complete: module,\n        student: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getCompleteModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/completed/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const profileUpdate = (firstName, lastName, user) => {\n  return axios.patch(\n    apiUrl + '/profile/',\n    {\n      userData: {\n        first_name: firstName,\n        last_name: lastName\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const profileView = (user) => {\n  return axios.get(\n    apiUrl + '/profile/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getTutors = (user) => {\n  return axios.get(\n    apiUrl + '/tutors/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const assignTutor = (user, tutor, course) => {\n  return axios.post(\n    apiUrl + '/tutors/assign/',\n    {\n      assign: {\n        tutor,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getAssignedTutors = (user, course) => {\n  return axios.get(\n    apiUrl + `/courses/${course}/tutors/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledStudents = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/enrolled/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getCourseById, editCourse, deleteCourse } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getTutors, assignTutor, getAssignedTutors } from '../../../api/user'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [showCourseEdit, setShowCourseEdit] = useState(false)\n  const [modules, setModules] = useState([])\n  const [assignedTutors, setAssignedTutors] = useState([])\n  const [tutors, setTutors] = useState([])\n  const [showAssignTutors, setShowAssignTutors] = useState(false)\n  const [newTutor, setNewTutor] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      setCourseName(res.data.course.name)\n      setCourseDescription(res.data.course.description)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resTut = await getAssignedTutors(user, courseId.id)\n          setAssignedTutors(resTut.data.assigned_tutors)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditCourse = async (event) => {\n    event.preventDefault()\n    try {\n      await editCourse(user, courseId.id, courseName, courseDescription)\n      setShowCourseEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Course Edit Successful!',\n        message: `Course ${courseName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Course Failed with error: ' + error.message,\n        message: 'Failed to edit the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteCourse(user, courseId.id)\n      setShowCourseEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Course Deletion Successful!',\n        message: `Course ${courseName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Course Failed with error: ' + error.message,\n        message: 'Failed to delete the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const handleShowAssignTutors = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await getTutors(user)\n      const filteredTutors = res.data.tutors.filter(tutorFilterFunc)\n      setTutors(filteredTutors)\n      setShowAssignTutors(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const tutorFilterFunc = list => {\n    if (assignedTutors.length >= 1) {\n      return list.email !== assignedTutors[0].tutor.email\n    } else {\n      return list.email\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to='/courses/' />\n  }\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  const renderedTutors = assignedTutors.map((tut) => {\n    return (\n      <li key={tut.id}>\n        <p>{tut.tutor.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listTutors = <ol className='container'>{renderedTutors}</ol>\n\n  const tmap = tutors.map((t, i) => {\n    return (\n      <option key={t.id} value={i}>{t.email}</option>\n    )\n  })\n\n  const handleAss = (event) => setNewTutor(tutors[event.target.value])\n\n  const onAssignTutor = async (event) => {\n    event.preventDefault()\n    if (event.target.value !== undefined) {\n      try {\n        await assignTutor(user, newTutor.id, courseId.id)\n        setShowAssignTutors(false)\n        setReRender(true)\n      } catch (error) {\n        console.error(error)\n      }\n    } else {\n      msgAlert({\n        heading: 'No Tutor Selected',\n        message: 'Please select a Tutor from the dropdown menu to assign',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{course.name}</h2>\n                <h5>{course.description}</h5>\n                <Button onClick={() => setShowCourseEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n                <br />\n                <br />\n              </div>\n              <br />\n              <div className='container shadow'>\n                <h5>Tutors:</h5>\n                {listTutors}\n                <Button onClick={handleShowAssignTutors}>Assign Tutors</Button>\n                <br />\n                <br />\n              </div>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showCourseEdit} onHide={() => setShowCourseEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Course Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='courseName'>\n                <FloatingLabel label='Course Name'>\n                  <Form.Control\n                    required\n                    name='courseName'\n                    value={courseName}\n                    type='text'\n                    placeholder='Course Name'\n                    onChange={(event) => setCourseName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='courseDescription'>\n                <FloatingLabel label='Course Description'>\n                  <Form.Control\n                    required\n                    name='courseDescription'\n                    value={courseDescription}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Course Description'\n                    onChange={(event) =>\n                      setCourseDescription(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowCourseEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditCourse}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      {/* Tutor Assign Modal */}\n      <div>\n        <Modal\n          show={showAssignTutors}\n          onHide={() => setShowAssignTutors(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Assign Tutor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FloatingLabel label='Assign Tutor'>\n              <Form.Control\n                as='select'\n                value={tmap.value}\n                onChange={(event) => handleAss(event)}\n              >\n                <option value=''>Select a Tutor to Assign</option>\n                options={tmap}\n              </Form.Control>\n            </FloatingLabel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={onAssignTutor}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { profileUpdate, profileView } from '../../api/user'\n\nconst Profile = ({ msgAlert, user }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [reRender, setReRender] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const res = await profileView(user)\n      setFirstName(res.data.first_name)\n      setLastName(res.data.last_name)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onUpdateProfile = async (event) => {\n    event.preventDefault()\n    try {\n      await profileUpdate(firstName, lastName, user)\n      msgAlert({\n        heading: 'Profile Update Success',\n        variant: 'success'\n      })\n      setReRender(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Profile Update failed',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Update profile</h3>\n        <Form onSubmit={onUpdateProfile}>\n          <Form.Group controlId='firstName'>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              name='firstName'\n              value={firstName}\n              type='text'\n              placeholder='First Name'\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='lastName'>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              name='lastName'\n              value={lastName}\n              type='text'\n              placeholder='Last Name'\n              onChange={(event) => setLastName(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nUpdate\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\n\nimport { createModule } from '../../../api/modules'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateModule = ({ msgAlert, user }) => {\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const location = useLocation()\n  const courseId = location.state.value\n\n  const onCreateModule = async (event) => {\n    event.preventDefault()\n    try {\n      await createModule(user, moduleName, moduleContent, courseId)\n      msgAlert({\n        heading: 'Module Creation Successful!',\n        message: `Module ${moduleName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigateBack(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Module Failed with error: ' + error.message,\n        message: 'Failed to create a new Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Module</h3>\n        <Form onSubmit={onCreateModule}>\n          <Form.Group controlId='moduleName'>\n            <Form.Label>Module Name</Form.Label>\n            <Form.Control\n              required\n              name='moduleName'\n              value={moduleName}\n              type='text'\n              placeholder='Module Name'\n              onChange={(event) => setModuleName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='moduleContent'>\n            <Form.Label>Module Content</Form.Label>\n            <Form.Control\n              required\n              name='moduleContent'\n              value={moduleContent}\n              type='text'\n              as='textarea'\n              rows='10'\n              placeholder='Module Content'\n              onChange={(event) => setModuleContent(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateModule\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getModuleById, editModule, deleteModule } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [showModuleEdit, setShowModuleEdit] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n      setModuleName(res.data.module.name)\n      setModuleContent(res.data.module.content)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditModule = async (event) => {\n    event.preventDefault()\n    try {\n      await editModule(user, moduleId.id, moduleName, moduleContent, courseId.id)\n      setShowModuleEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Module Edit Successful!',\n        message: `Module ${moduleName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Module Failed with error: ' + error.message,\n        message: 'Failed to edit the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteModule(user, moduleId.id)\n      setShowModuleEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Module Deletion Successful!',\n        message: `Module ${moduleName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Module Failed with error: ' + error.message,\n        message: 'Failed to delete the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId.id}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{module.name}</h2>\n                <h5>{module.content}</h5>\n                <Button onClick={() => setShowModuleEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showModuleEdit} onHide={() => setShowModuleEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Module Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='moduleName'>\n                <FloatingLabel label='Module Name'>\n                  <Form.Control\n                    required\n                    name='moduleName'\n                    value={moduleName}\n                    type='text'\n                    placeholder='Module Name'\n                    onChange={(event) => setModuleName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='moduleContent'>\n                <FloatingLabel label='Module Content'>\n                  <Form.Control\n                    required\n                    name='moduleContent'\n                    value={moduleContent}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Module Content'\n                    onChange={(event) =>\n                      setModuleContent(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowModuleEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditModule}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport { getCourseById } from '../../../api/courses'\nimport { getModules, getCompleteModules } from '../../../api/modules'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [completedModules, setCompletedModules] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resModCompleted = await getCompleteModules(user, courseId.id)\n          setCompletedModules(resModCompleted.data.completed_module.map((cm) => {\n            return cm.module_complete.id\n          }))\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const reducedModules = modules.filter((m) => {\n    if (completedModules.includes(m.id)) {\n      m.completed = '✅'\n      return m\n    } else {\n      return m\n    }\n  }, [loading])\n\n  const renderedModules = reducedModules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ course: courseId.id, completed: m.completed }}>\n          <h3 className='container shadow-lg'>{m.completed}{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  if (navigateBack) {\n    return <Navigate to='/courses/enrolled/' />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h1>{course.name}</h1>\n                <h5>{course.description}</h5>\n                <br />\n                <br />\n              </div>\n              <br />\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { completeModule, getModuleById } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [completed, setCompleted] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.course\n  const moduleCompleted = location.state.completed\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      if (moduleCompleted === '✅') setCompleted(true)\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onCompleteModule = async () => {\n    try {\n      await completeModule(user, moduleId.id)\n      setShouldNavigateBack(true)\n    } catch {\n\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-12'>\n              <div className='container' style={{ textAlign: 'center' }}>\n                <h1>{module.name}</h1>\n                <hr />\n                <br />\n              </div>\n              <div>\n                <h5 style={{ textAlign: 'center' }}>{module.content}</h5>\n              </div>\n              <div>\n                {completed\n                  ? (\n                    <p\n                      style={{\n                        position: 'absolute',\n                        bottom: '5vh',\n                        right: '5vw',\n                        fontWeight: 'bold',\n                        color: 'red'\n                      }}>\n                        Already Completed\n                    </p>\n                  )\n                  : (\n                    <a\n                      style={{\n                        position: 'absolute',\n                        bottom: '5vh',\n                        right: '5vw',\n                        textDecoration: 'underline',\n                        color: 'blue',\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => onCompleteModule()}>\nMark Completed\n                    </a>\n                  )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n// import Modal from 'react-bootstrap/Modal'\n// import Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\n// import FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getCourseById } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getEnrolledStudents } from '../../../api/user'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [enrolledStudents, setEnrolledStudents] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  // const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resStu = await getEnrolledStudents(user, courseId.id)\n          setEnrolledStudents(resStu.data.enrolled_students)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  if (navigateBack) {\n    // setReRender(false) // temporary for testing\n    return <Navigate to='/courses/' />\n  }\n\n  const renderedStudents = enrolledStudents.map((stu) => {\n    return (\n      <li key={stu.student.id}>\n        <p>{stu.student.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listStudents = <ol className='container'>{renderedStudents}</ol>\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{course.name}</h2>\n                <h5>{course.description}</h5>\n                <br />\n                <br />\n              </div>\n              <br />\n              <div className='container shadow'>\n                <h5>Enrolled Students:</h5>\n                {listStudents}\n                <br />\n                <br />\n              </div>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","/* eslint-disable no-tabs */\nimport React, { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport Home from './components/Header/Home'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateCourse from './components/author/course/CreateCourse'\nimport ViewCourses from './components/author/course/ViewCourses'\nimport ViewCoursesEnrolled from './components/student/course/ViewCoursesEnrolled'\nimport ViewCourseIdAuthor from './components/author/course/ViewCourseId'\nimport Profile from './components/user/Profile'\nimport CreateModule from './components/author/module/CreateModule'\nimport ViewModuleId from './components/author/module/ViewModuleId'\nimport ViewCourseIdStudent from './components/student/course/ViewCourseId'\nimport ViewModuleIdStudent from './components/student/module/ViewModuleId'\nimport ViewCourseIdTutor from './components/tutor/course/ViewCourseId'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [userType, setUserType] = useState(null)\n\n  const clearUserType = () => setUserType(null)\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  useEffect(() => {\n    if (user) {\n      if (user.isStudent) {\n        // setIsStudent(true)\n        setUserType('Student')\n      } else if (user.isTutor) {\n        // setIsTutor(true)\n        setUserType('Tutor')\n      } else if (user.isAuthor) {\n        // setIsAuthor(true)\n        setUserType('Author')\n      }\n    }\n  }, [user])\n\n  // Student Routes\n  const studentRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/enrolled/'\n        element={\n          <ViewCoursesEnrolled\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n    </>\n  )\n\n  // Tutor Routes\n  const tutorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdTutor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n    </>\n  )\n\n  // Author Routes\n  const authorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdAuthor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n      <Route\n        path='/courses/create/'\n        element={<CreateCourse msgAlert={msgAlert} user={user} />}\n      />\n      <Route\n        path='/courses/:id/modules/create/'\n        element={<CreateModule msgAlert={msgAlert} user={user} />}\n      />\n    </>\n  )\n\n  return (\n    <>\n      <Header user={user} userType={userType} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          {/* Auth Routes */}\n          <Route\n            path='/sign-up/'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in/'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out/'\n            element={\n              <SignOut\n                msgAlert={msgAlert}\n                user={user}\n                clearUserType={clearUserType}\n                clearUser={clearUser}\n              />\n            }\n          />\n          <Route\n            path='/change-password/'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/profile/'\n            element={<Profile msgAlert={msgAlert} user={user} />}\n          />\n          {/* Generic Routes */}\n          <Route path='/' element={<Home user={user} userType={userType} />} />\n          <Route\n            path='/courses/'\n            element={<ViewCourses user={user} userType={userType} />}\n          />\n          {userType === 'Student'\n            ? studentRoutes\n            : userType === 'Tutor'\n              ? tutorRoutes\n              : userType === 'Author'\n                ? authorRoutes\n                : ''}\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}