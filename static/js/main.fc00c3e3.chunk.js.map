{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","components/Header/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/courses.js","components/author/course/CreateCourse.js","components/author/course/ViewCourses.js","components/student/course/ViewCoursesEnrolled.js","api/modules.js","api/user.js","components/author/course/ViewCourseId.js","components/user/Profile.js","components/author/module/CreateModule.js","components/author/module/ViewModuleId.js","components/student/course/ViewCourseId.js","components/student/module/ViewModuleId.js","components/tutor/course/ViewCourseId.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authorOptions","to","tutorOptions","studentOptions","unauthenticatedOptions","Header","user","userType","Navbar","bg","expand","Container","Brand","style","color","textDecoration","src","Toggle","aria-controls","Collapse","Nav","email","Home","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","isUserType","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","setUserType","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Check","inline","label","Button","SignIn","shouldNavigateTutor","setShouldNavigateTutor","onSignIn","isTutor","SignOut","clearUser","clearUserType","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createCourse","formData","config","getCourses","get","getCoursesStudent","getCoursesTutor","getCourseById","getCourseByIdStudent","editCourse","description","course","deleteCourse","enrolCourse","enrol","student","getEnrolledCourses","CreateCourse","courseName","setCourseName","courseDescription","setCourseDescription","courseImage","setCourseImage","onCreateCourse","FormData","append","as","rows","accept","files","Courses","courses","setCourses","loading","setLoading","renderedCourses","map","Card","border","Img","image","Body","Title","remarkPlugins","remarkGfm","onClick","handleEnrol","CardGroup","Row","md","Spinner","animation","mapCourses","enrolled_courses","c","createModule","content","module","getModules","getModuleById","editModule","deleteModule","completeModule","complete","module_complete","getCompleteModules","profileUpdate","firstName","lastName","userData","first_name","last_name","profileView","getTutors","assignTutor","tutor","assign","getAssignedTutors","getEnrolledStudents","Course","setCourse","showCourseEdit","setShowCourseEdit","modules","setModules","assignedTutors","setAssignedTutors","tutors","setTutors","showAssignTutors","setShowAssignTutors","newTutor","setNewTutor","navigateBack","setShouldNavigateBack","navigateAddModule","setShouldNavigateAddModule","reRender","setReRender","courseId","useParams","resMod","resTut","assigned_tutors","console","error","onEditCourse","onDelete","handleShowAssignTutors","filteredTutors","filter","tutorFilterFunc","list","length","state","renderedModules","m","listModules","renderedTutors","tut","listTutors","tmap","t","i","onAssignTutor","undefined","Footer","Modal","onHide","closeButton","FloatingLabel","handleAss","Profile","setFirstName","setLastName","onUpdateProfile","CreateModule","moduleName","setModuleName","moduleContent","setModuleContent","useLocation","onCreateModule","Module","setModule","showModuleEdit","setShowModuleEdit","moduleId","onEditModule","completedModules","setCompletedModules","resModCompleted","completed_module","cm","includes","completed","setCompleted","moduleCompleted","onCompleteModule","textAlign","position","bottom","right","fontWeight","cursor","enrolledStudents","setEnrolledStudents","resStu","enrolled_students","renderedStudents","stu","listStudents","App","msgAlerts","setMsgAlerts","uuid","isStudent","isAuthor","studentRoutes","path","element","ViewCoursesEnrolled","tutorRoutes","ViewModuleId","ViewCourses","authorRoutes","ViewCourseId","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc00c3e3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport '../../assets/navStyle.css'\n\nconst authorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/courses/create/' className='nav-link'>Add Course</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst tutorOptions = (\n  <>\n    <NavLink to='/courses/assigned/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst studentOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Find A Course</NavLink>\n    <NavLink to='/courses/enrolled/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n    <NavLink to='/sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst Header = ({ user, userType }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/courses/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          <img className='navLogo' src='https://i.imgur.com/E9e7s2r.png'></img>\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>\nWelcome, {user.email}({userType})\n            </span>\n          )}\n          {userType === 'Student'\n            ? studentOptions\n            : userType === 'Tutor'\n              ? tutorOptions\n              : userType === 'Author'\n                ? authorOptions\n                : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <br />\n      <div className='container'>\n        <h1>Welcome to Only Exams!</h1>\n        <br/>\n        <h5>If you are new, sign up now to have access to all of our courses.</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://capstone-proj-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation, isUserType) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    },\n    userType: isUserType\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [userType, setUserType] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      await signUp(email, password, passwordConfirmation, userType)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/profile/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <br />\n\n          <Form.Group controlId='userType'>\n            <Form.Label>User Type</Form.Label>\n            <div key={'inline-radio}'} className='mb-3'>\n              <Form.Check\n                inline\n                label='Student'\n                name='userType'\n                value='is_student'\n                type='radio'\n                id={'inline-radio}-1'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Tutor'\n                name='userType'\n                value='is_tutor'\n                type='radio'\n                id={'inline-radio}-2'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Author'\n                name='userType'\n                value='is_author'\n                type='radio'\n                id={'inline-radio}-3'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n            </div>\n          </Form.Group>\n\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [shouldNavigateTutor, setShouldNavigateTutor] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      if (res.data.user.isTutor) {\n        setShouldNavigateTutor(true)\n      } else {\n        setShouldNavigate(true)\n      }\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  if (shouldNavigateTutor) {\n    return <Navigate to='/courses/assigned/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, clearUserType, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      clearUserType()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createCourse = (formData, config) => {\n  return axios.post(`${apiUrl}/courses/create/`, formData, config)\n}\n\nexport const getCourses = (user) => {\n  return axios.get(apiUrl + '/courses/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesStudent = (user) => {\n  return axios.get(apiUrl + '/courses/available/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesTutor = (user) => {\n  return axios.get(apiUrl + '/courses/assigned/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseById = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseByIdStudent = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/view/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editCourse = (user, id, name, description) => {\n  return axios.patch(\n    apiUrl + `/courses/${id}/`, {\n      course: {\n        name,\n        description\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const deleteCourse = (user, id) => {\n  return axios.delete(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const enrolCourse = (user, course) => {\n  return axios.post(\n    apiUrl + `/courses/${course}/enrol/`,\n    {\n      enrol: {\n        student: user.id,\n        course\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledCourses = (user) => {\n  return axios.get(\n    apiUrl + '/courses/enrolled/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { createCourse } from '../../../api/courses'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FormData from 'form-data'\n\nconst CreateCourse = ({ msgAlert, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [courseImage, setCourseImage] = useState(null)\n\n  const onCreateCourse = async (event) => {\n    event.preventDefault()\n    const formData = new FormData()\n    formData.append('name', courseName)\n    formData.append('description', courseDescription)\n    if (courseImage) {\n      formData.append('image', courseImage[0], courseImage[0].name)\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Token ${user.token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n      await createCourse(formData, config)\n      msgAlert({\n        heading: 'Course Creation Successful!',\n        message: `Course ${courseName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Course Failed with error: ' + error.message,\n        message: 'Failed to create a new course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Course</h3>\n        <Form onSubmit={onCreateCourse}>\n          <Form.Group controlId='courseName'>\n            <Form.Label>Course Name</Form.Label>\n            <Form.Control\n              required\n              name='courseName'\n              value={courseName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setCourseName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='courseDescription'>\n            <Form.Label>Course Description</Form.Label>\n            <Form.Control\n              required\n              name='courseDescription'\n              value={courseDescription}\n              type='text'\n              as='textarea'\n              rows='6'\n              placeholder='Course Description'\n              onChange={(event) => setCourseDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Course Image</Form.Label>\n            <Form.Control\n              name='image'\n              type='file'\n              accept='image/png, image/jpeg'\n              onChange={(event) => setCourseImage(event.target.files)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateCourse\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Row from 'react-bootstrap/Row'\n\nimport { getCourses, enrolCourse, getCoursesStudent, getCoursesTutor } from '../../../api/courses'\nimport apiUrl from '../../../apiConfig'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      if (userType === 'Student') {\n        const res = await getCoursesStudent(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else if (userType === 'Tutor') {\n        const res = await getCoursesTutor(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else {\n        const res = await getCourses(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      }\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses available right now.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map(course => {\n    if (userType === 'Student') {\n      return (\n        <Card border='primary' className='shadow' key={course.id}>\n          <Card.Img variant='top' src={apiUrl + course.image} />\n          <Card.Body>\n            <Card.Title>{course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n            <Button\n              variant='success'\n              value={course.id}\n              onClick={(event) => handleEnrol(event)}>\nEnrol\n            </Button>\n          </Card.Body>\n        </Card>\n      )\n    } else if (userType === 'Tutor') {\n      return (\n        <Card border='primary' className='shadow' key={course.course.id}>\n          <Link to={`/courses/${course.course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title>{course.course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      )\n    } else {\n      return (\n        <Card border='primary' className='shadow' key={course.id}>\n          <Link to={`/courses/${course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title>{course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      )\n    }\n  })\n\n  const handleEnrol = async (event) => {\n    try {\n      await enrolCourse(user, event.target.value)\n      msgAlert({\n        heading: 'Successfully enrolled!',\n        message: 'You have successfully enrolled in this course!',\n        variant: 'success'\n      })\n    } catch {\n      msgAlert({\n        heading: 'Error enrolling',\n        message: 'There was an error enrolling in this course.',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <h3>Courses:</h3>\n      <CardGroup>\n        <Row md={3} className='g-4'>\n          {!loading\n            ? (\n              renderedCourses\n            )\n            : (\n              <Spinner animation='border' variant='primary' />\n            )}\n        </Row>\n      </CardGroup>\n    </>\n  )\n}\n\nexport default Courses\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Row from 'react-bootstrap/Row'\n\nimport { getEnrolledCourses } from '../../../api/courses'\nimport apiUrl from '../../../apiConfig'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getEnrolledCourses(user)\n      const mapCourses = res.data.enrolled_courses.map(c => {\n        return {\n          id: c.course.id,\n          name: c.course.name,\n          description: c.course.description\n        }\n      })\n      setCourses(mapCourses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please enrol in a Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map((course) => {\n    return (\n      <>\n        <Card border='primary' className='shadow' key={course.id}>\n          <Link to={`/courses/${course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title>{course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  })\n\n  return (\n    <>\n      <h3>Your Enrolled Courses:</h3>\n      <CardGroup>\n        <Row md={3} className='g-4'>\n          {!loading\n            ? (\n              renderedCourses\n            )\n            : (\n              <Spinner animation='border' variant='primary' />\n            )}\n        </Row>\n      </CardGroup>\n    </>\n  )\n}\n\nexport default Courses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createModule = (user, name, content, course) => {\n  return axios.post(\n    apiUrl + '/courses/modules/create/', {\n      module: {\n        name,\n        content,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModuleById = (user, id, course) => {\n  return axios.get(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editModule = (user, id, name, content, course) => {\n  return axios.patch(\n    apiUrl + `/courses/modules/${id}/`,\n    {\n      module: {\n        course,\n        name,\n        content\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteModule = (user, id) => {\n  return axios.delete(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const completeModule = (user, module) => {\n  return axios.post(\n    apiUrl + `/courses/modules/${module}/complete/`,\n    {\n      complete: {\n        module_complete: module,\n        student: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getCompleteModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/completed/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const profileUpdate = (firstName, lastName, user) => {\n  return axios.patch(\n    apiUrl + '/profile/',\n    {\n      userData: {\n        first_name: firstName,\n        last_name: lastName\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const profileView = (user) => {\n  return axios.get(\n    apiUrl + '/profile/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getTutors = (user) => {\n  return axios.get(\n    apiUrl + '/tutors/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const assignTutor = (user, tutor, course) => {\n  return axios.post(\n    apiUrl + '/tutors/assign/',\n    {\n      assign: {\n        tutor,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getAssignedTutors = (user, course) => {\n  return axios.get(\n    apiUrl + `/courses/${course}/tutors/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledStudents = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/enrolled/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Card from 'react-bootstrap/Card'\n\nimport { getCourseById, editCourse, deleteCourse } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getTutors, assignTutor, getAssignedTutors } from '../../../api/user'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [courseImage, setCourseImage] = useState(null)\n  const [showCourseEdit, setShowCourseEdit] = useState(false)\n  const [modules, setModules] = useState([])\n  const [assignedTutors, setAssignedTutors] = useState([])\n  const [tutors, setTutors] = useState([])\n  const [showAssignTutors, setShowAssignTutors] = useState(false)\n  const [newTutor, setNewTutor] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      setCourseName(res.data.course.name)\n      setCourseDescription(res.data.course.description)\n      if (res.data.course.image) {\n        setCourseImage(res.data.course.image)\n      }\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resTut = await getAssignedTutors(user, courseId.id)\n          setAssignedTutors(resTut.data.assigned_tutors)\n          setReRender(false)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditCourse = async (event) => {\n    event.preventDefault()\n    try {\n      await editCourse(user, courseId.id, courseName, courseDescription)\n      setShowCourseEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Course Edit Successful!',\n        message: `Course ${courseName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Course Failed with error: ' + error.message,\n        message: 'Failed to edit the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteCourse(user, courseId.id)\n      setShowCourseEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Course Deletion Successful!',\n        message: `Course ${courseName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Course Failed with error: ' + error.message,\n        message: 'Failed to delete the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const handleShowAssignTutors = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await getTutors(user)\n      const filteredTutors = res.data.tutors.filter(tutorFilterFunc)\n      setTutors(filteredTutors)\n      setShowAssignTutors(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const tutorFilterFunc = list => {\n    if (assignedTutors.length >= 1) {\n      return list.email !== assignedTutors[0].tutor.email\n    } else {\n      return list.email\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to='/courses/' />\n  }\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  const renderedTutors = assignedTutors.map((tut) => {\n    return (\n      <li key={tut.id}>\n        <p>{tut.tutor.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listTutors = <ol className='container'>{renderedTutors}</ol>\n\n  const tmap = tutors.map((t, i) => {\n    return (\n      <option key={t.id} value={i}>{t.email}</option>\n    )\n  })\n\n  const handleAss = (event) => setNewTutor(tutors[event.target.value])\n\n  const onAssignTutor = async (event) => {\n    event.preventDefault()\n    if (event.target.value !== undefined) {\n      try {\n        await assignTutor(user, newTutor.id, courseId.id)\n        setShowAssignTutors(false)\n        setReRender(true)\n      } catch (error) {\n        console.error(error)\n      }\n    } else {\n      msgAlert({\n        heading: 'No Tutor Selected',\n        message: 'Please select a Tutor from the dropdown menu to assign',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5'>\n              <Card border='primary' className='shadow'>\n                <Card.Img variant='top' src={apiUrl + courseImage} />\n                <Card.Body>\n                  <Card.Title>{course.name}</Card.Title>\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                    {course.description}\n                  </ReactMarkdown>\n                  <Button onClick={() => setShowCourseEdit(true)}>Edit</Button>\n                  <Button variant='danger' onClick={onDelete}>\n                  Delete\n                  </Button>\n                </Card.Body>\n                <Card.Footer>\n                  <h5>Tutors:</h5>\n                  {listTutors}\n                  <Button onClick={handleShowAssignTutors}>Assign Tutors</Button>\n                </Card.Footer>\n              </Card>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showCourseEdit} onHide={() => setShowCourseEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Course Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='courseName'>\n                <FloatingLabel label='Course Name'>\n                  <Form.Control\n                    required\n                    name='courseName'\n                    value={courseName}\n                    type='text'\n                    placeholder='Course Name'\n                    onChange={(event) => setCourseName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='courseDescription'>\n                <FloatingLabel label='Course Description'>\n                  <Form.Control\n                    required\n                    name='courseDescription'\n                    value={courseDescription}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Course Description'\n                    onChange={(event) =>\n                      setCourseDescription(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowCourseEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditCourse}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      {/* Tutor Assign Modal */}\n      <div>\n        <Modal\n          show={showAssignTutors}\n          onHide={() => setShowAssignTutors(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Assign Tutor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FloatingLabel label='Assign Tutor'>\n              <Form.Control\n                as='select'\n                value={tmap.value}\n                onChange={(event) => handleAss(event)}>\n                <option value=''>Select a Tutor to Assign</option>\noptions={tmap}\n              </Form.Control>\n            </FloatingLabel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={onAssignTutor}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { profileUpdate, profileView } from '../../api/user'\n\nconst Profile = ({ msgAlert, user }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [reRender, setReRender] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const res = await profileView(user)\n      setFirstName(res.data.first_name)\n      setLastName(res.data.last_name)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onUpdateProfile = async (event) => {\n    event.preventDefault()\n    try {\n      await profileUpdate(firstName, lastName, user)\n      msgAlert({\n        heading: 'Profile Update Success',\n        variant: 'success'\n      })\n      setReRender(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Profile Update failed',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Update profile</h3>\n        <Form onSubmit={onUpdateProfile}>\n          <Form.Group controlId='firstName'>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              name='firstName'\n              value={firstName}\n              type='text'\n              placeholder='First Name'\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='lastName'>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              name='lastName'\n              value={lastName}\n              type='text'\n              placeholder='Last Name'\n              onChange={(event) => setLastName(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nUpdate\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\n\nimport { createModule } from '../../../api/modules'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateModule = ({ msgAlert, user }) => {\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const location = useLocation()\n  const courseId = location.state.value\n\n  const onCreateModule = async (event) => {\n    event.preventDefault()\n    try {\n      await createModule(user, moduleName, moduleContent, courseId)\n      msgAlert({\n        heading: 'Module Creation Successful!',\n        message: `Module ${moduleName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigateBack(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Module Failed with error: ' + error.message,\n        message: 'Failed to create a new Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Module</h3>\n        <Form onSubmit={onCreateModule}>\n          <Form.Group controlId='moduleName'>\n            <Form.Label>Module Name</Form.Label>\n            <Form.Control\n              required\n              name='moduleName'\n              value={moduleName}\n              type='text'\n              placeholder='Module Name'\n              onChange={(event) => setModuleName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='moduleContent'>\n            <Form.Label>Module Content</Form.Label>\n            <Form.Control\n              required\n              name='moduleContent'\n              value={moduleContent}\n              type='text'\n              as='textarea'\n              rows='10'\n              placeholder='Module Content'\n              onChange={(event) => setModuleContent(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateModule\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getModuleById, editModule, deleteModule } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [showModuleEdit, setShowModuleEdit] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n      setModuleName(res.data.module.name)\n      setModuleContent(res.data.module.content)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditModule = async (event) => {\n    event.preventDefault()\n    try {\n      await editModule(user, moduleId.id, moduleName, moduleContent, courseId.id)\n      setShowModuleEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Module Edit Successful!',\n        message: `Module ${moduleName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Module Failed with error: ' + error.message,\n        message: 'Failed to edit the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteModule(user, moduleId.id)\n      setShowModuleEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Module Deletion Successful!',\n        message: `Module ${moduleName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Module Failed with error: ' + error.message,\n        message: 'Failed to delete the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId.id}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{module.name}</h2>\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                  {module.content}\n                </ReactMarkdown>\n                <Button onClick={() => setShowModuleEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showModuleEdit} onHide={() => setShowModuleEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Module Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='moduleName'>\n                <FloatingLabel label='Module Name'>\n                  <Form.Control\n                    required\n                    name='moduleName'\n                    value={moduleName}\n                    type='text'\n                    placeholder='Module Name'\n                    onChange={(event) => setModuleName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='moduleContent'>\n                <FloatingLabel label='Module Content'>\n                  <Form.Control\n                    required\n                    name='moduleContent'\n                    value={moduleContent}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Module Content'\n                    onChange={(event) => setModuleContent(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowModuleEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditModule}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\n\nimport { getCourseByIdStudent } from '../../../api/courses'\nimport { getModules, getCompleteModules } from '../../../api/modules'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [completedModules, setCompletedModules] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseByIdStudent(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resModCompleted = await getCompleteModules(user, courseId.id)\n          setCompletedModules(resModCompleted.data.completed_module.map((cm) => {\n            return cm.module_complete.id\n          }))\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const reducedModules = modules.filter((m) => {\n    if (completedModules.includes(m.id)) {\n      m.completed = '✅'\n      return m\n    } else {\n      return m\n    }\n  }, [loading])\n\n  const renderedModules = reducedModules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ course: courseId.id, completed: m.completed }}>\n          <h3 className='container shadow-lg'>{m.completed}{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  if (navigateBack) {\n    return <Navigate to='/courses/enrolled/' />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5'>\n              <Card border='primary' className='shadow'>\n                <Card.Img variant='top' src={apiUrl + course.image} />\n                <Card.Body>\n                  <Card.Title>{course.name}</Card.Title>\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                    {course.description}\n                  </ReactMarkdown>\n                </Card.Body>\n              </Card>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { completeModule, getModuleById } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [completed, setCompleted] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.course\n  const moduleCompleted = location.state.completed\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      if (moduleCompleted === '✅') setCompleted(true)\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onCompleteModule = async () => {\n    try {\n      await completeModule(user, moduleId.id)\n      setShouldNavigateBack(true)\n    } catch {\n\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-12'>\n              <div className='container' style={{ textAlign: 'center' }}>\n                <h1>{module.name}</h1>\n                <hr />\n                <br />\n              </div>\n              <div style={{ textAlign: 'center' }}>\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                  {module.content}\n                </ReactMarkdown>\n              </div>\n              <div>\n                {completed\n                  ? (\n                    <p\n                      style={{\n                        position: 'absolute',\n                        bottom: '5vh',\n                        right: '5vw',\n                        fontWeight: 'bold',\n                        color: 'red'\n                      }}>\nAlready Completed\n                    </p>\n                  )\n                  : (\n                    <a\n                      style={{\n                        position: 'absolute',\n                        bottom: '5vh',\n                        right: '5vw',\n                        textDecoration: 'underline',\n                        color: 'blue',\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => onCompleteModule()}>\nMark Completed\n                    </a>\n                  )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\n\nimport { getCourseById } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getEnrolledStudents } from '../../../api/user'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [enrolledStudents, setEnrolledStudents] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  // const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resStu = await getEnrolledStudents(user, courseId.id)\n          setEnrolledStudents(resStu.data.enrolled_students)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  if (navigateBack) {\n    return <Navigate to='/courses/assigned/' />\n  }\n\n  const renderedStudents = enrolledStudents.map((stu) => {\n    return (\n      <li key={stu.student.id}>\n        <p>{stu.student.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listStudents = <ol className='container'>{renderedStudents}</ol>\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5'>\n              <Card border='primary' className='shadow'>\n                <Card.Img variant='top' src={apiUrl + course.image} />\n                <Card.Body>\n                  <Card.Title>{course.name}</Card.Title>\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                    {course.description}\n                  </ReactMarkdown>\n                </Card.Body>\n                <Card.Footer>\n                  <h5>Enrolled Students:</h5>\n                  {listStudents}\n                </Card.Footer>\n              </Card>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","/* eslint-disable no-tabs */\nimport React, { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport Home from './components/Header/Home'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateCourse from './components/author/course/CreateCourse'\nimport ViewCourses from './components/author/course/ViewCourses'\nimport ViewCoursesEnrolled from './components/student/course/ViewCoursesEnrolled'\nimport ViewCourseIdAuthor from './components/author/course/ViewCourseId'\nimport Profile from './components/user/Profile'\nimport CreateModule from './components/author/module/CreateModule'\nimport ViewModuleId from './components/author/module/ViewModuleId'\nimport ViewCourseIdStudent from './components/student/course/ViewCourseId'\nimport ViewModuleIdStudent from './components/student/module/ViewModuleId'\nimport ViewCourseIdTutor from './components/tutor/course/ViewCourseId'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [userType, setUserType] = useState(null)\n\n  const clearUserType = () => setUserType(null)\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  useEffect(() => {\n    if (user) {\n      if (user.isStudent) {\n        // setIsStudent(true)\n        setUserType('Student')\n      } else if (user.isTutor) {\n        // setIsTutor(true)\n        setUserType('Tutor')\n      } else if (user.isAuthor) {\n        // setIsAuthor(true)\n        setUserType('Author')\n      }\n    }\n  }, [user])\n\n  // Student Routes\n  const studentRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/enrolled/'\n        element={\n          <ViewCoursesEnrolled\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n    </>\n  )\n\n  // Tutor Routes\n  const tutorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdTutor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n      <Route\n        path='/courses/assigned/'\n        element={<ViewCourses user={user} userType={userType} />}\n      />\n    </>\n  )\n\n  // Author Routes\n  const authorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdAuthor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n      <Route\n        path='/courses/create/'\n        element={<CreateCourse msgAlert={msgAlert} user={user} />}\n      />\n      <Route\n        path='/courses/:id/modules/create/'\n        element={<CreateModule msgAlert={msgAlert} user={user} />}\n      />\n    </>\n  )\n\n  return (\n    <>\n      <Header user={user} userType={userType} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          {/* Auth Routes */}\n          <Route\n            path='/sign-up/'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in/'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out/'\n            element={\n              <SignOut\n                msgAlert={msgAlert}\n                user={user}\n                clearUserType={clearUserType}\n                clearUser={clearUser}\n              />\n            }\n          />\n          <Route\n            path='/change-password/'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/profile/'\n            element={<Profile msgAlert={msgAlert} user={user} />}\n          />\n          {/* Generic Routes */}\n          <Route path='/' element={<Home user={user} userType={userType} />} />\n          <Route\n            path='/courses/'\n            element={<ViewCourses user={user} userType={userType} />}\n          />\n          {userType === 'Student'\n            ? studentRoutes\n            : userType === 'Tutor'\n              ? tutorRoutes\n              : userType === 'Author'\n                ? authorRoutes\n                : ''}\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}