{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","components/Header/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/courses.js","components/author/course/CreateCourse.js","components/author/course/ViewCourses.js","components/student/course/ViewCoursesEnrolled.js","api/modules.js","api/user.js","components/author/course/ViewCourseId.js","components/user/Profile.js","components/author/module/CreateModule.js","components/author/module/ViewModuleId.js","components/student/course/ViewCourseId.js","components/student/module/ViewModuleId.js","components/tutor/course/ViewCourseId.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authorOptions","to","tutorOptions","studentOptions","unauthenticatedOptions","Header","user","userType","Navbar","bg","expand","Container","Brand","style","color","textDecoration","src","Toggle","aria-controls","Collapse","Nav","email","Home","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","isUserType","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","setUserType","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Check","inline","label","Button","SignIn","shouldNavigateTutor","setShouldNavigateTutor","onSignIn","isTutor","SignOut","clearUser","clearUserType","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createCourse","formData","config","getCourses","get","getCoursesStudent","getCoursesTutor","getCourseById","getCourseByIdStudent","editCourse","description","course","deleteCourse","enrolCourse","enrol","student","getEnrolledCourses","CreateCourse","courseName","setCourseName","courseDescription","setCourseDescription","courseImage","setCourseImage","onCreateCourse","FormData","append","as","rows","accept","files","Courses","courses","setCourses","loading","setLoading","renderedCourses","map","Card","border","Img","image","Body","Title","remarkPlugins","remarkGfm","onClick","handleEnrol","navAfterEnrol","courseId","CardGroup","Row","md","Spinner","animation","mapCourses","enrolled_courses","c","createModule","content","module","getModules","getModuleById","editModule","deleteModule","completeModule","complete","module_complete","getCompleteModules","profileUpdate","firstName","lastName","userData","first_name","last_name","profileView","getTutors","assignTutor","tutor","assign","getAssignedTutors","getEnrolledStudents","Course","setCourse","showCourseEdit","setShowCourseEdit","modules","setModules","assignedTutors","setAssignedTutors","tutors","setTutors","showAssignTutors","setShowAssignTutors","newTutor","setNewTutor","navigateBack","setShouldNavigateBack","navigateAddModule","setShouldNavigateAddModule","reRender","setReRender","useParams","resMod","resTut","assigned_tutors","console","error","onEditCourse","onDelete","handleShowAssignTutors","filteredTutors","filter","tutorFilterFunc","list","length","state","renderedModules","m","ListGroup","Item","listModules","renderedTutors","tut","listTutors","tmap","t","i","onAssignTutor","undefined","Footer","Modal","onHide","closeButton","FloatingLabel","handleAss","Profile","setFirstName","setLastName","onUpdateProfile","CreateModule","moduleName","setModuleName","moduleContent","setModuleContent","useLocation","onCreateModule","Module","setModule","showModuleEdit","setShowModuleEdit","moduleId","onEditModule","completedModules","setCompletedModules","resModCompleted","completed_module","cm","includes","completed","setCompleted","moduleCompleted","onCompleteModule","textAlign","fontWeight","cursor","enrolledStudents","setEnrolledStudents","resStu","enrolled_students","renderedStudents","stu","App","msgAlerts","setMsgAlerts","uuid","isStudent","isAuthor","studentRoutes","path","element","ViewCoursesEnrolled","tutorRoutes","ViewModuleId","ViewCourses","authorRoutes","ViewCourseId","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2954548.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport '../../assets/navStyle.css'\n\nconst authorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/courses/create/' className='nav-link'>Add Course</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst tutorOptions = (\n  <>\n    <NavLink to='/courses/assigned/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst studentOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Find A Course</NavLink>\n    <NavLink to='/courses/enrolled/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n    <NavLink to='/sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst Header = ({ user, userType }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/courses/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          <img className='navLogo' src='https://i.imgur.com/E9e7s2r.png'></img>\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>\nWelcome, {user.email}({userType})\n            </span>\n          )}\n          {userType === 'Student'\n            ? studentOptions\n            : userType === 'Tutor'\n              ? tutorOptions\n              : userType === 'Author'\n                ? authorOptions\n                : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <br />\n      <div className='container'>\n        <h1>Welcome to Only Exams!</h1>\n        <br/>\n        <h5>If you are new, sign up now to have access to all of our courses.</h5>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://capstone-proj-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation, isUserType) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    },\n    userType: isUserType\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [userType, setUserType] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      await signUp(email, password, passwordConfirmation, userType)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/profile/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <br />\n\n          <Form.Group controlId='userType'>\n            <Form.Label>User Type</Form.Label>\n            <div key={'inline-radio}'} className='mb-3'>\n              <Form.Check\n                inline\n                label='Student'\n                name='userType'\n                value='is_student'\n                type='radio'\n                id={'inline-radio}-1'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Tutor'\n                name='userType'\n                value='is_tutor'\n                type='radio'\n                id={'inline-radio}-2'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Author'\n                name='userType'\n                value='is_author'\n                type='radio'\n                id={'inline-radio}-3'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n            </div>\n          </Form.Group>\n\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [shouldNavigateTutor, setShouldNavigateTutor] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      if (res.data.user.isTutor) {\n        setShouldNavigateTutor(true)\n      } else {\n        setShouldNavigate(true)\n      }\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  if (shouldNavigateTutor) {\n    return <Navigate to='/courses/assigned/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, clearUserType, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      clearUserType()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createCourse = (formData, config) => {\n  return axios.post(`${apiUrl}/courses/create/`, formData, config)\n}\n\nexport const getCourses = (user) => {\n  return axios.get(apiUrl + '/courses/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesStudent = (user) => {\n  return axios.get(apiUrl + '/courses/available/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCoursesTutor = (user) => {\n  return axios.get(apiUrl + '/courses/assigned/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseById = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseByIdStudent = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/view/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editCourse = (user, id, name, description) => {\n  return axios.patch(\n    apiUrl + `/courses/${id}/`, {\n      course: {\n        name,\n        description\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const deleteCourse = (user, id) => {\n  return axios.delete(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const enrolCourse = (user, course) => {\n  return axios.post(\n    apiUrl + `/courses/${course}/enrol/`,\n    {\n      enrol: {\n        student: user.id,\n        course\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledCourses = (user) => {\n  return axios.get(\n    apiUrl + '/courses/enrolled/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { createCourse } from '../../../api/courses'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FormData from 'form-data'\n\nconst CreateCourse = ({ msgAlert, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [courseImage, setCourseImage] = useState(null)\n\n  const onCreateCourse = async (event) => {\n    event.preventDefault()\n    const formData = new FormData()\n    formData.append('name', courseName)\n    formData.append('description', courseDescription)\n    if (courseImage) {\n      formData.append('image', courseImage[0], courseImage[0].name)\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Token ${user.token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n      await createCourse(formData, config)\n      msgAlert({\n        heading: 'Course Creation Successful!',\n        message: `Course ${courseName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Course Failed with error: ' + error.message,\n        message: 'Failed to create a new course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/courses/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Course</h3>\n        <Form onSubmit={onCreateCourse}>\n          <Form.Group controlId='courseName'>\n            <Form.Label>Course Name</Form.Label>\n            <Form.Control\n              required\n              name='courseName'\n              value={courseName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setCourseName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='courseDescription'>\n            <Form.Label>Course Description</Form.Label>\n            <Form.Control\n              required\n              name='courseDescription'\n              value={courseDescription}\n              type='text'\n              as='textarea'\n              rows='6'\n              placeholder='Course Description'\n              onChange={(event) => setCourseDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Course Image</Form.Label>\n            <Form.Control\n              name='image'\n              type='file'\n              accept='image/png, image/jpeg'\n              onChange={(event) => setCourseImage(event.target.files)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateCourse\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Row from 'react-bootstrap/Row'\n\nimport { getCourses, enrolCourse, getCoursesStudent, getCoursesTutor } from '../../../api/courses'\nimport apiUrl from '../../../apiConfig'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      if (userType === 'Student') {\n        const res = await getCoursesStudent(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else if (userType === 'Tutor') {\n        const res = await getCoursesTutor(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      } else {\n        const res = await getCourses(user)\n        setCourses(res.data.courses)\n        setLoading(false)\n      }\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses available right now.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map(course => {\n    if (userType === 'Student') {\n      return (\n        <Card border='primary' className='shadow' key={course.id}>\n          <Card.Img variant='top' src={apiUrl + course.image} />\n          <Card.Body>\n            <Card.Title><h3>{course.name}</h3></Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n            <Button\n              variant='success'\n              value={course.id}\n              onClick={(event) => handleEnrol(event)}>\nEnrol\n            </Button>\n          </Card.Body>\n        </Card>\n      )\n    } else if (userType === 'Tutor') {\n      return (\n        <Card border='primary' className='shadow' key={course.course.id}>\n          <Link to={`/courses/${course.course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title>{course.course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      )\n    } else {\n      return (\n        <Card border='primary' className='shadow' key={course.id}>\n          <Link to={`/courses/${course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title>{course.name}</Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      )\n    }\n  })\n\n  const handleEnrol = async (event) => {\n    try {\n      await enrolCourse(user, event.target.value)\n      msgAlert({\n        heading: 'Successfully enrolled!',\n        message: 'You have successfully enrolled in this course!',\n        variant: 'success'\n      })\n      navAfterEnrol(event.target.value)\n      // return <Navigate to={`/courses/${event.target.value}`} />\n    } catch {\n      msgAlert({\n        heading: 'Error enrolling',\n        message: 'There was an error enrolling in this course.',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const navAfterEnrol = (courseId) => {\n    return <Navigate to={`/courses/${courseId}`} />\n  }\n\n  return (\n    <>\n      <h3>Courses:</h3>\n      <CardGroup>\n        <Row md={3} className='g-4'>\n          {!loading\n            ? (\n              renderedCourses\n            )\n            : (\n              <Spinner animation='border' variant='primary' />\n            )}\n        </Row>\n      </CardGroup>\n    </>\n  )\n}\n\nexport default Courses\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Row from 'react-bootstrap/Row'\n\nimport { getEnrolledCourses } from '../../../api/courses'\nimport apiUrl from '../../../apiConfig'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getEnrolledCourses(user)\n      const mapCourses = res.data.enrolled_courses.map(c => {\n        return {\n          id: c.course.id,\n          name: c.course.name,\n          description: c.course.description\n        }\n      })\n      setCourses(mapCourses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please enrol in a Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map((course) => {\n    return (\n      <>\n        <Card border='primary' className='shadow' key={course.id}>\n          <Link to={`/courses/${course.id}/`}>\n            <Card.Img variant='top' src={apiUrl + course.image} />\n          </Link>\n          <Card.Body>\n            <Card.Title><h3>{course.name}</h3></Card.Title>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {course.description}\n            </ReactMarkdown>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  })\n\n  return (\n    <>\n      <h3>Your Enrolled Courses:</h3>\n      <CardGroup>\n        <Row md={3} className='g-4'>\n          {!loading\n            ? (\n              renderedCourses\n            )\n            : (\n              <Spinner animation='border' variant='primary' />\n            )}\n        </Row>\n      </CardGroup>\n    </>\n  )\n}\n\nexport default Courses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createModule = (user, name, content, course) => {\n  return axios.post(\n    apiUrl + '/courses/modules/create/', {\n      module: {\n        name,\n        content,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModuleById = (user, id, course) => {\n  return axios.get(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editModule = (user, id, name, content, course) => {\n  return axios.patch(\n    apiUrl + `/courses/modules/${id}/`,\n    {\n      module: {\n        course,\n        name,\n        content\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteModule = (user, id) => {\n  return axios.delete(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const completeModule = (user, module) => {\n  return axios.post(\n    apiUrl + `/courses/modules/${module}/complete/`,\n    {\n      complete: {\n        module_complete: module,\n        student: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getCompleteModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/completed/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const profileUpdate = (firstName, lastName, user) => {\n  return axios.patch(\n    apiUrl + '/profile/',\n    {\n      userData: {\n        first_name: firstName,\n        last_name: lastName\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const profileView = (user) => {\n  return axios.get(\n    apiUrl + '/profile/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getTutors = (user) => {\n  return axios.get(\n    apiUrl + '/tutors/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const assignTutor = (user, tutor, course) => {\n  return axios.post(\n    apiUrl + '/tutors/assign/',\n    {\n      assign: {\n        tutor,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getAssignedTutors = (user, course) => {\n  return axios.get(\n    apiUrl + `/courses/${course}/tutors/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledStudents = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/enrolled/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport { getCourseById, editCourse, deleteCourse } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getTutors, assignTutor, getAssignedTutors } from '../../../api/user'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [courseImage, setCourseImage] = useState(null)\n  const [showCourseEdit, setShowCourseEdit] = useState(false)\n  const [modules, setModules] = useState([])\n  const [assignedTutors, setAssignedTutors] = useState([])\n  const [tutors, setTutors] = useState([])\n  const [showAssignTutors, setShowAssignTutors] = useState(false)\n  const [newTutor, setNewTutor] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      setCourseName(res.data.course.name)\n      setCourseDescription(res.data.course.description)\n      if (res.data.course.image) {\n        setCourseImage(res.data.course.image)\n      }\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resTut = await getAssignedTutors(user, courseId.id)\n          setAssignedTutors(resTut.data.assigned_tutors)\n          setReRender(false)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditCourse = async (event) => {\n    event.preventDefault()\n    try {\n      await editCourse(user, courseId.id, courseName, courseDescription)\n      setShowCourseEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Course Edit Successful!',\n        message: `Course ${courseName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Course Failed with error: ' + error.message,\n        message: 'Failed to edit the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteCourse(user, courseId.id)\n      setShowCourseEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Course Deletion Successful!',\n        message: `Course ${courseName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Course Failed with error: ' + error.message,\n        message: 'Failed to delete the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const handleShowAssignTutors = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await getTutors(user)\n      const filteredTutors = res.data.tutors.filter(tutorFilterFunc)\n      setTutors(filteredTutors)\n      setShowAssignTutors(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const tutorFilterFunc = list => {\n    if (assignedTutors.length >= 1) {\n      return list.email !== assignedTutors[0].tutor.email\n    } else {\n      return list.email\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to='/courses/' />\n  }\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <ListGroup.Item>\n          <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n            {m.name}\n          </Link>\n        </ListGroup.Item>\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  const renderedTutors = assignedTutors.map((tut) => {\n    return (\n      <li key={tut.id}>\n        <ListGroup.Item>\n          {tut.tutor.email}\n        </ListGroup.Item>\n      </li>\n    )\n  })\n  const listTutors = <ol className='container'>{renderedTutors}</ol>\n\n  const tmap = tutors.map((t, i) => {\n    return (\n      <option key={t.id} value={i}>{t.email}</option>\n    )\n  })\n\n  const handleAss = (event) => setNewTutor(tutors[event.target.value])\n\n  const onAssignTutor = async (event) => {\n    event.preventDefault()\n    if (event.target.value !== undefined) {\n      try {\n        await assignTutor(user, newTutor.id, courseId.id)\n        setShowAssignTutors(false)\n        setReRender(true)\n      } catch (error) {\n        console.error(error)\n      }\n    } else {\n      msgAlert({\n        heading: 'No Tutor Selected',\n        message: 'Please select a Tutor from the dropdown menu to assign',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <Card border='primary' className='col-5 shadow'>\n              <Card.Img variant='top' src={apiUrl + courseImage} />\n              <Card.Body>\n                <Card.Title><h3>{course.name}</h3></Card.Title>\n                <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                  {course.description}\n                </ReactMarkdown>\n                <Button onClick={() => setShowCourseEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\n                  Delete\n                </Button>\n              </Card.Body>\n              <Card.Footer>\n                <Card.Header><h4>Tutors:</h4></Card.Header>\n                <ListGroup variant='flush'>\n                  {listTutors}\n                  <ListGroup.Item>\n                    <Button onClick={handleShowAssignTutors}>Assign Tutors</Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card.Footer>\n            </Card>\n\n            <Card border='primary col-6 container shadow'>\n              <Card.Header><h3>Modules:</h3></Card.Header>\n              <ListGroup variant='flush'>\n                {!loading\n                  ? (\n                    listModules\n                  )\n                  : (\n                    <Spinner animation='border' variant='primary' />\n                  )}\n                <ListGroup.Item>\n                  <Button onClick={handleOnAddModule}>Add Module</Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showCourseEdit} onHide={() => setShowCourseEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Course Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='courseName'>\n                <FloatingLabel label='Course Name'>\n                  <Form.Control\n                    required\n                    name='courseName'\n                    value={courseName}\n                    type='text'\n                    placeholder='Course Name'\n                    onChange={(event) => setCourseName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='courseDescription'>\n                <FloatingLabel label='Course Description'>\n                  <Form.Control\n                    required\n                    name='courseDescription'\n                    value={courseDescription}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Course Description'\n                    onChange={(event) =>\n                      setCourseDescription(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowCourseEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditCourse}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      {/* Tutor Assign Modal */}\n      <div>\n        <Modal\n          show={showAssignTutors}\n          onHide={() => setShowAssignTutors(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Assign Tutor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FloatingLabel label='Assign Tutor'>\n              <Form.Control\n                as='select'\n                value={tmap.value}\n                onChange={(event) => handleAss(event)}>\n                <option value=''>Select a Tutor to Assign</option>\noptions={tmap}\n              </Form.Control>\n            </FloatingLabel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={onAssignTutor}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { profileUpdate, profileView } from '../../api/user'\n\nconst Profile = ({ msgAlert, user }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [reRender, setReRender] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const res = await profileView(user)\n      setFirstName(res.data.first_name)\n      setLastName(res.data.last_name)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onUpdateProfile = async (event) => {\n    event.preventDefault()\n    try {\n      await profileUpdate(firstName, lastName, user)\n      msgAlert({\n        heading: 'Profile Update Success',\n        variant: 'success'\n      })\n      setReRender(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Profile Update failed',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Update profile</h3>\n        <Form onSubmit={onUpdateProfile}>\n          <Form.Group controlId='firstName'>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              name='firstName'\n              value={firstName}\n              type='text'\n              placeholder='First Name'\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='lastName'>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              name='lastName'\n              value={lastName}\n              type='text'\n              placeholder='Last Name'\n              onChange={(event) => setLastName(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nUpdate\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\n\nimport { createModule } from '../../../api/modules'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateModule = ({ msgAlert, user }) => {\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const location = useLocation()\n  const courseId = location.state.value\n\n  const onCreateModule = async (event) => {\n    event.preventDefault()\n    try {\n      await createModule(user, moduleName, moduleContent, courseId)\n      msgAlert({\n        heading: 'Module Creation Successful!',\n        message: `Module ${moduleName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigateBack(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Module Failed with error: ' + error.message,\n        message: 'Failed to create a new Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Module</h3>\n        <Form onSubmit={onCreateModule}>\n          <Form.Group controlId='moduleName'>\n            <Form.Label>Module Name</Form.Label>\n            <Form.Control\n              required\n              name='moduleName'\n              value={moduleName}\n              type='text'\n              placeholder='Module Name'\n              onChange={(event) => setModuleName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='moduleContent'>\n            <Form.Label>Module Content</Form.Label>\n            <Form.Control\n              required\n              name='moduleContent'\n              value={moduleContent}\n              type='text'\n              as='textarea'\n              rows='10'\n              placeholder='Module Content'\n              onChange={(event) => setModuleContent(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateModule\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Card from 'react-bootstrap/Card'\n\nimport { getModuleById, editModule, deleteModule } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [showModuleEdit, setShowModuleEdit] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n      setModuleName(res.data.module.name)\n      setModuleContent(res.data.module.content)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditModule = async (event) => {\n    event.preventDefault()\n    try {\n      await editModule(user, moduleId.id, moduleName, moduleContent, courseId.id)\n      setShowModuleEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Module Edit Successful!',\n        message: `Module ${moduleName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Module Failed with error: ' + error.message,\n        message: 'Failed to edit the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteModule(user, moduleId.id)\n      setShowModuleEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Module Deletion Successful!',\n        message: `Module ${moduleName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Module Failed with error: ' + error.message,\n        message: 'Failed to delete the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId.id}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <Card border='primary' className='col-5 shadow container'>\n          <Card.Header><h1>{module.name}</h1></Card.Header>\n          <Card.Body>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>\n              {module.content}\n            </ReactMarkdown>\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setShowModuleEdit(true)}>Edit</Button>\n            <Button variant='danger' onClick={onDelete}>\nDelete\n            </Button>\n          </Card.Footer>\n        </Card>\n      </div>\n\n      <div>\n        <Modal show={showModuleEdit} onHide={() => setShowModuleEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Module Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='moduleName'>\n                <FloatingLabel label='Module Name'>\n                  <Form.Control\n                    required\n                    name='moduleName'\n                    value={moduleName}\n                    type='text'\n                    placeholder='Module Name'\n                    onChange={(event) => setModuleName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='moduleContent'>\n                <FloatingLabel label='Module Content'>\n                  <Form.Control\n                    required\n                    name='moduleContent'\n                    value={moduleContent}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Module Content'\n                    onChange={(event) => setModuleContent(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowModuleEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditModule}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport { getCourseByIdStudent } from '../../../api/courses'\nimport { getModules, getCompleteModules } from '../../../api/modules'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [completedModules, setCompletedModules] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseByIdStudent(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resModCompleted = await getCompleteModules(user, courseId.id)\n          setCompletedModules(resModCompleted.data.completed_module.map((cm) => {\n            return cm.module_complete.id\n          }))\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const reducedModules = modules.filter((m) => {\n    if (completedModules.includes(m.id)) {\n      m.completed = '✅'\n      return m\n    } else {\n      return m\n    }\n  }, [loading])\n\n  const renderedModules = reducedModules.map((m) => {\n    return (\n      <li key={m.id}>\n        <ListGroup.Item>\n          <Link to={`/courses/modules/${m.id}/`} state={{ course: courseId.id, completed: m.completed }}>\n            {m.completed} {m.name}\n          </Link>\n        </ListGroup.Item>\n      </li>\n    )\n  })\n\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  if (navigateBack) {\n    return <Navigate to='/courses/enrolled/' />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5'>\n              <Card border='primary' className='shadow'>\n                <Card.Img variant='top' src={apiUrl + course.image} />\n                <Card.Body>\n                  <Card.Title><h3>{course.name}</h3></Card.Title>\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                    {course.description}\n                  </ReactMarkdown>\n                </Card.Body>\n              </Card>\n            </div>\n\n            <Card border='primary col-6 container shadow'>\n              <Card.Header><h3>Modules:</h3></Card.Header>\n              <ListGroup variant='flush'>\n                {!loading\n                  ? (\n                    listModules\n                  )\n                  : (\n                    <Spinner animation='border' variant='primary' />\n                  )}\n              </ListGroup>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\nimport { completeModule, getModuleById } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [completed, setCompleted] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.course\n  const moduleCompleted = location.state.completed\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      if (moduleCompleted === '✅') setCompleted(true)\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onCompleteModule = async () => {\n    try {\n      await completeModule(user, moduleId.id)\n      setShouldNavigateBack(true)\n    } catch {\n\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <br />\n      <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n      <br />\n      <br />\n\n      <Card border='primary' className='col-12 shadow container'>\n        <Card.Header><h1>{module.name}</h1></Card.Header>\n        <Card.Body>\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\n            {module.content}\n          </ReactMarkdown>\n        </Card.Body>\n        <Card.Footer>\n          {completed\n            ? (\n              <p\n                style={{\n                  textAlign: 'end',\n                  fontWeight: 'bold',\n                  color: 'red'\n                }}>\nAlready Completed\n              </p>\n            )\n            : (\n              <p\n                style={{\n                  textAlign: 'end',\n                  textDecoration: 'underline',\n                  color: 'blue',\n                  cursor: 'pointer'\n                }}\n                onClick={() => onCompleteModule()}>\nMark Completed\n              </p>\n            )}\n        </Card.Footer>\n      </Card>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport { getCourseById } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getEnrolledStudents } from '../../../api/user'\nimport apiUrl from '../../../apiConfig'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [enrolledStudents, setEnrolledStudents] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  // const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resStu = await getEnrolledStudents(user, courseId.id)\n          setEnrolledStudents(resStu.data.enrolled_students)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  if (navigateBack) {\n    return <Navigate to='/courses/assigned/' />\n  }\n\n  const renderedStudents = enrolledStudents.map((stu) => {\n    return (\n      <ListGroup.Item key={stu.student.id}>\n        {stu.student.email}\n      </ListGroup.Item>\n    )\n  })\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <ListGroup.Item>\n          <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n            {m.name}\n          </Link>\n        </ListGroup.Item>\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5'>\n              <Card border='primary' className='shadow'>\n                <Card.Img variant='top' src={apiUrl + course.image} />\n                <Card.Body>\n                  <Card.Title><h3>{course.name}</h3></Card.Title>\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                    {course.description}\n                  </ReactMarkdown>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Header>\n                    <h4>Enrolled Students:</h4>\n                  </Card.Header>\n                  <ListGroup variant='flush'>\n                    {renderedStudents}\n                  </ListGroup>\n                </Card.Footer>\n              </Card>\n            </div>\n\n            <Card border='primary col-6 container shadow'>\n              <Card.Header><h3>Modules:</h3></Card.Header>\n              <ListGroup variant='flush'>\n                {!loading\n                  ? (\n                    listModules\n                  )\n                  : (\n                    <Spinner animation='border' variant='primary' />\n                  )}\n                <ListGroup.Item>\n                  <Button onClick={handleOnAddModule}>Add Module</Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","/* eslint-disable no-tabs */\nimport React, { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport Home from './components/Header/Home'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateCourse from './components/author/course/CreateCourse'\nimport ViewCourses from './components/author/course/ViewCourses'\nimport ViewCoursesEnrolled from './components/student/course/ViewCoursesEnrolled'\nimport ViewCourseIdAuthor from './components/author/course/ViewCourseId'\nimport Profile from './components/user/Profile'\nimport CreateModule from './components/author/module/CreateModule'\nimport ViewModuleId from './components/author/module/ViewModuleId'\nimport ViewCourseIdStudent from './components/student/course/ViewCourseId'\nimport ViewModuleIdStudent from './components/student/module/ViewModuleId'\nimport ViewCourseIdTutor from './components/tutor/course/ViewCourseId'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [userType, setUserType] = useState(null)\n\n  const clearUserType = () => setUserType(null)\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  useEffect(() => {\n    if (user) {\n      if (user.isStudent) {\n        // setIsStudent(true)\n        setUserType('Student')\n      } else if (user.isTutor) {\n        // setIsTutor(true)\n        setUserType('Tutor')\n      } else if (user.isAuthor) {\n        // setIsAuthor(true)\n        setUserType('Author')\n      }\n    }\n  }, [user])\n\n  // Student Routes\n  const studentRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/enrolled/'\n        element={\n          <ViewCoursesEnrolled\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n    </>\n  )\n\n  // Tutor Routes\n  const tutorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdTutor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n      <Route\n        path='/courses/assigned/'\n        element={<ViewCourses user={user} userType={userType} />}\n      />\n      <Route\n        path='/courses/:id/modules/create/'\n        element={<CreateModule msgAlert={msgAlert} user={user} />}\n      />\n    </>\n  )\n\n  // Author Routes\n  const authorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdAuthor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n      <Route\n        path='/courses/create/'\n        element={<CreateCourse msgAlert={msgAlert} user={user} />}\n      />\n      <Route\n        path='/courses/:id/modules/create/'\n        element={<CreateModule msgAlert={msgAlert} user={user} />}\n      />\n    </>\n  )\n\n  return (\n    <>\n      <Header user={user} userType={userType} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          {/* Auth Routes */}\n          <Route\n            path='/sign-up/'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in/'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out/'\n            element={\n              <SignOut\n                msgAlert={msgAlert}\n                user={user}\n                clearUserType={clearUserType}\n                clearUser={clearUser}\n              />\n            }\n          />\n          <Route\n            path='/change-password/'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/profile/'\n            element={<Profile msgAlert={msgAlert} user={user} />}\n          />\n          {/* Generic Routes */}\n          <Route path='/' element={<Home user={user} userType={userType} />} />\n          <Route\n            path='/courses/'\n            element={\n              <ViewCourses\n                msgAlert={msgAlert}\n                user={user}\n                userType={userType}\n              />\n            }\n          />\n          {userType === 'Student'\n            ? studentRoutes\n            : userType === 'Tutor'\n              ? tutorRoutes\n              : userType === 'Author'\n                ? authorRoutes\n                : ''}\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}