{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","components/Header/Home.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/courses.js","components/author/course/CreateCourse.js","components/author/course/ViewCourses.js","components/student/course/ViewCoursesEnrolled.js","api/modules.js","api/user.js","components/author/course/ViewCourseId.js","components/user/Profile.js","components/author/module/CreateModule.js","components/author/module/ViewModuleId.js","components/student/course/ViewCourseId.js","components/student/module/ViewModuleId.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authorOptions","to","tutorOptions","studentOptions","unauthenticatedOptions","alwaysOptions","Header","user","userType","Navbar","bg","expand","Container","Brand","style","color","textDecoration","src","Toggle","aria-controls","Collapse","Nav","email","Home","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","isUserType","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","setUserType","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Check","inline","label","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createCourse","description","course","getCourses","get","getCourseById","editCourse","deleteCourse","enrolCourse","enrol","student","getEnrolledCourses","CreateCourse","courseName","setCourseName","courseDescription","setCourseDescription","onCreateCourse","as","rows","Courses","courses","setCourses","loading","setLoading","renderedCourses","map","onClick","handleEnrol","listCourses","Spinner","animation","mapCourses","enrolled_courses","c","createModule","content","module","getModules","getModuleById","editModule","deleteModule","completeModule","complete","module_complete","profileUpdate","firstName","lastName","userData","profileView","getTutors","assignTutor","tutor","assign","getAssignedTutors","Course","setCourse","showCourseEdit","setShowCourseEdit","modules","setModules","assignedTutors","setAssignedTutors","tutors","setTutors","showAssignTutors","setShowAssignTutors","newTutor","setNewTutor","navigateBack","setShouldNavigateBack","navigateAddModule","setShouldNavigateAddModule","reRender","setReRender","courseId","useParams","resMod","resTut","assigned_tutors","error","onEditCourse","onDelete","handleShowAssignTutors","filteredTutors","filter","tutorFilterFunc","list","state","renderedModules","m","listModules","renderedTutors","tut","listTutors","tmap","t","i","onAssignTutor","Modal","onHide","closeButton","Title","Body","FloatingLabel","Footer","aria-label","handleAss","Profile","setFirstName","setLastName","onUpdateProfile","CreateModule","moduleName","setModuleName","moduleContent","setModuleContent","useLocation","onCreateModule","Module","setModule","showModuleEdit","setShowModuleEdit","moduleId","onEditModule","onCompleteModule","textAlign","position","bottom","right","cursor","App","msgAlerts","setMsgAlerts","uuid","isStudent","isTutor","isAuthor","studentRoutes","path","element","ViewCoursesEnrolled","tutorRoutes","authorRoutes","ViewCourseId","ViewModuleId","ViewCourses","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cc4d475.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport '../../assets/navStyle.css'\n\nconst authorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Courses</NavLink>\n    <NavLink to='/courses/create/' className='nav-link'>Add Course</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst tutorOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst studentOptions = (\n  <>\n    <NavLink to='/courses/' className='nav-link'>Find A Course</NavLink>\n    <NavLink to='/courses/enrolled/' className='nav-link'>Your Courses</NavLink>\n    <NavLink to='/change-password/' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/profile/' className='nav-link'>Profile</NavLink>\n    <NavLink to='/sign-out/' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up/' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in/' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user, userType }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          <img className='navLogo' src='https://i.imgur.com/E9e7s2r.png'></img>\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>\nWelcome, {user.email}({userType})\n            </span>\n          )}\n          {alwaysOptions}\n          {userType === 'Student'\n            ? studentOptions\n            : userType === 'Tutor'\n              ? tutorOptions\n              : userType === 'Author'\n                ? authorOptions\n                : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Home = () => (\n  <>\n    <h1>Welcome</h1>\n  </>\n)\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://capstone-proj-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation, isUserType) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    },\n    userType: isUserType\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [userType, setUserType] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      await signUp(email, password, passwordConfirmation, userType)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <br />\n\n          <Form.Group controlId='userType'>\n            <Form.Label>User Type</Form.Label>\n            <div key={'inline-radio}'} className='mb-3'>\n              <Form.Check\n                inline\n                label='Student'\n                name='userType'\n                value='is_student'\n                type='radio'\n                id={'inline-radio}-1'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Tutor'\n                name='userType'\n                value='is_tutor'\n                type='radio'\n                id={'inline-radio}-2'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n              <Form.Check\n                inline\n                label='Author'\n                name='userType'\n                value='is_author'\n                type='radio'\n                id={'inline-radio}-3'}\n                onChange={(event) => setUserType(event.target.value)}\n              />\n            </div>\n          </Form.Group>\n\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createCourse = (user, name, description) => {\n  return axios.post(apiUrl + '/courses/create/', {\n    course: {\n      name,\n      description\n    }\n  }, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourses = (user) => {\n  return axios.get(apiUrl + '/courses/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getCourseById = (user, id) => {\n  return axios.get(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editCourse = (user, id, name, description) => {\n  return axios.patch(\n    apiUrl + `/courses/${id}/`, {\n      course: {\n        name,\n        description\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const deleteCourse = (user, id) => {\n  return axios.delete(apiUrl + `/courses/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const enrolCourse = (user, course) => {\n  return axios.post(\n    apiUrl + `/courses/${course}/enrol/`,\n    {\n      enrol: {\n        student: user.id,\n        course\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getEnrolledCourses = (user) => {\n  return axios.get(\n    apiUrl + '/courses/enrolled/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { createCourse } from '../../../api/courses'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateCourse = ({ msgAlert, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n\n  const onCreateCourse = async (event) => {\n    event.preventDefault()\n\n    try {\n      await createCourse(user, courseName, courseDescription)\n      msgAlert({\n        heading: 'Course Creation Successful!',\n        message: `Course ${courseName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Course Failed with error: ' + error.message,\n        message: 'Failed to create a new course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Course</h3>\n        <Form onSubmit={onCreateCourse}>\n          <Form.Group controlId='courseName'>\n            <Form.Label>Course Name</Form.Label>\n            <Form.Control\n              required\n              name='courseName'\n              value={courseName}\n              type='text'\n              placeholder='Course Name'\n              onChange={(event) => setCourseName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='courseDescription'>\n            <Form.Label>Course Description</Form.Label>\n            <Form.Control\n              required\n              name='courseDescription'\n              value={courseDescription}\n              type='text'\n              as='textarea'\n              rows='6'\n              placeholder='Course Description'\n              onChange={(event) => setCourseDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateCourse\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\n\nimport { getCourses, enrolCourse } from '../../../api/courses'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getCourses(user)\n      setCourses(res.data.courses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please Add Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map(course => {\n    if (userType !== 'Student') {\n      return (\n        <li key={course.id}>\n          <div className='container'>\n            <Link to={`/courses/${course.id}/`}>\n              <h1>{course.name}</h1>\n            </Link>\n            <h5>{course.description}</h5>\n            <hr />\n          </div>\n        </li>\n      )\n    } else {\n      return (\n        <li key={course.id}>\n          <div className='container'>\n            <h1>{course.name}</h1>\n            <h5>{course.description}</h5>\n            <Button variant='success' value={course.id} onClick={(event) => handleEnrol(event)}>Enrol</Button>\n            <hr />\n          </div>\n        </li>\n      )\n    }\n  })\n  const listCourses = <ul>{renderedCourses}</ul>\n\n  const handleEnrol = async (event) => {\n    try {\n      await enrolCourse(user, event.target.value)\n      msgAlert({\n        heading: 'Successfully enrolled!',\n        message: 'You have successfully enrolled in this course!',\n        variant: 'success'\n      })\n    } catch {\n      msgAlert({\n        heading: 'Error enrolling',\n        message: 'There was an error enrolling in this course.',\n        variant: 'danger'\n      })\n    }\n  }\n\n  return (\n    <>\n      <h3>Courses:</h3>\n      {!loading\n        ? (\n          listCourses\n        )\n        : (\n          <Spinner animation='border' variant='primary' />\n        )}\n    </>\n  )\n}\n\nexport default Courses\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\n\nimport Spinner from 'react-bootstrap/Spinner'\n// import Button from 'react-bootstrap/Button'\n\nimport { getEnrolledCourses } from '../../../api/courses'\n\nconst Courses = ({ msgAlert, user, userType }) => {\n  const [courses, setCourses] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(async () => {\n    try {\n      const res = await getEnrolledCourses(user)\n      const mapCourses = res.data.enrolled_courses.map(c => {\n        return {\n          id: c.course.id,\n          name: c.course.name,\n          description: c.course.description\n        }\n      })\n      setCourses(mapCourses)\n      setLoading(false)\n    } catch {\n      msgAlert({\n        heading: 'No Courses',\n        message: 'There are no courses. Please enrol in a Course.',\n        variant: 'danger'\n      })\n    }\n  }, [])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const renderedCourses = courses.map((course) => {\n    return (\n      <li key={course.id}>\n        <div className='container'>\n          <Link to={`/courses/${course.id}/`}>\n            <h1>{course.name}</h1>\n          </Link>\n          <h5>{course.description}</h5>\n          <hr />\n        </div>\n      </li>\n    )\n  })\n\n  const listCourses = <ul>{renderedCourses}</ul>\n\n  return (\n    <>\n      <h3>Your Enrolled Courses:</h3>\n      {!loading\n        ? (\n          listCourses\n        )\n        : (\n          <Spinner animation='border' variant='primary' />\n        )}\n    </>\n  )\n}\n\nexport default Courses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createModule = (user, name, content, course) => {\n  return axios.post(\n    apiUrl + '/courses/modules/create/', {\n      module: {\n        name,\n        content,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModules = (user, course) => {\n  return axios.get(apiUrl + `/courses/${course}/modules/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    })\n}\n\nexport const getModuleById = (user, id, course) => {\n  return axios.get(apiUrl + `/courses/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const editModule = (user, id, name, content, course) => {\n  return axios.patch(\n    apiUrl + `/courses/modules/${id}/`,\n    {\n      module: {\n        course,\n        name,\n        content\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteModule = (user, id, course) => {\n  return axios.delete(apiUrl + `/courses/${course}/modules/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const completeModule = (user, module) => {\n  return axios.post(\n    apiUrl + `/courses/modules/${module}/complete/`,\n    {\n      complete: {\n        module_complete: module,\n        student: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const profileUpdate = (firstName, lastName, user) => {\n  return axios.patch(\n    apiUrl + '/profile/',\n    {\n      userData: {\n        firstName,\n        lastName\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const profileView = (user) => {\n  return axios.get(\n    apiUrl + '/profile/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getTutors = (user) => {\n  return axios.get(\n    apiUrl + '/tutors/',\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const assignTutor = (user, tutor, course) => {\n  return axios.post(\n    apiUrl + '/tutors/assign/',\n    {\n      assign: {\n        tutor,\n        course\n      }\n    }, {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const getAssignedTutors = (user, course) => {\n  return axios.get(\n    apiUrl + `/courses/${course}/tutors/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getCourseById, editCourse, deleteCourse } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\nimport { getTutors, assignTutor, getAssignedTutors } from '../../../api/user'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [courseName, setCourseName] = useState('')\n  const [courseDescription, setCourseDescription] = useState('')\n  const [showCourseEdit, setShowCourseEdit] = useState(false)\n  const [modules, setModules] = useState([])\n  const [assignedTutors, setAssignedTutors] = useState([])\n  const [tutors, setTutors] = useState([])\n  const [showAssignTutors, setShowAssignTutors] = useState(false)\n  const [newTutor, setNewTutor] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [navigateAddModule, setShouldNavigateAddModule] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      setCourseName(res.data.course.name)\n      setCourseDescription(res.data.course.description)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n        try {\n          const resTut = await getAssignedTutors(user, courseId.id)\n          setAssignedTutors(resTut.data.assigned_tutors)\n        } catch (error) {\n          console.error(error)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditCourse = async (event) => {\n    event.preventDefault()\n    try {\n      await editCourse(user, courseId.id, courseName, courseDescription)\n      setShowCourseEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Course Edit Successful!',\n        message: `Course ${courseName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Course Failed with error: ' + error.message,\n        message: 'Failed to edit the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteCourse(user, courseId.id)\n      setShowCourseEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Course Deletion Successful!',\n        message: `Course ${courseName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Course Failed with error: ' + error.message,\n        message: 'Failed to delete the course',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const handleShowAssignTutors = async (event) => {\n    event.preventDefault()\n    try {\n      const res = await getTutors(user)\n      const filteredTutors = res.data.tutors.filter(tutorFilterFunc)\n      setTutors(filteredTutors)\n      setShowAssignTutors(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const tutorFilterFunc = list => {\n    return list.email !== assignedTutors[0].tutor.email\n  }\n\n  if (navigateBack) {\n    return <Navigate to='/courses/' />\n  }\n\n  const handleOnAddModule = () => setShouldNavigateAddModule(true)\n\n  if (navigateAddModule) {\n    return (\n      <Navigate\n        to={`/courses/${courseId}/modules/create/`}\n        state={{ value: courseId.id }}\n      />\n    )\n  }\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  const renderedTutors = assignedTutors.map((tut) => {\n    return (\n      <li key={tut.id}>\n        <p>{tut.tutor.email}</p>\n        <hr />\n      </li>\n    )\n  })\n  const listTutors = <ol className='container'>{renderedTutors}</ol>\n\n  const tmap = tutors.map((t, i) => {\n    return (\n      <option key={t.id} value={i}>{t.email}</option>\n    )\n  })\n\n  const handleAss = (event) => setNewTutor(tutors[event.target.value])\n\n  const onAssignTutor = async (event) => {\n    event.preventDefault()\n    try {\n      await assignTutor(user, newTutor.id, courseId.id)\n      setShowAssignTutors(false)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{course.name}</h2>\n                <h5>{course.description}</h5>\n                <Button onClick={() => setShowCourseEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n                <br />\n                <br />\n              </div>\n              <br />\n              <div className='container shadow'>\n                <h5>Tutors:</h5>\n                {listTutors}\n                <Button onClick={handleShowAssignTutors}>Assign Tutors</Button>\n                <br />\n                <br />\n              </div>\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n              <Button onClick={handleOnAddModule}>Add Module</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showCourseEdit} onHide={() => setShowCourseEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Course Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='courseName'>\n                <FloatingLabel label='Course Name'>\n                  <Form.Control\n                    required\n                    name='courseName'\n                    value={courseName}\n                    type='text'\n                    placeholder='Course Name'\n                    onChange={(event) => setCourseName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='courseDescription'>\n                <FloatingLabel label='Course Description'>\n                  <Form.Control\n                    required\n                    name='courseDescription'\n                    value={courseDescription}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Course Description'\n                    onChange={(event) =>\n                      setCourseDescription(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowCourseEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditCourse}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n\n      {/* Tutor Assign Modal */}\n      <div>\n        <Modal\n          show={showAssignTutors}\n          onHide={() => setShowAssignTutors(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Assign Tutor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FloatingLabel label='Assign Tutor'>\n              <Form.Control\n                aria-label='Default select example'\n                as='select'\n                value={tmap.value}\n                onChange={(event) => handleAss(event)}\n              >\n                options={tmap}\n              </Form.Control>\n            </FloatingLabel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='primary' onClick={onAssignTutor}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { profileUpdate, profileView } from '../../api/user'\n\nconst Profile = ({ msgAlert, user }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const res = await profileView(user)\n      console.log(res.data)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onUpdateProfile = async (event) => {\n    event.preventDefault()\n\n    try {\n      await profileUpdate(firstName, lastName, user)\n      // msgAlert({\n      //   heading: 'Change Password Success',\n      //   message:\n      //   variant: 'success'\n      // })\n      setShouldNavigate(true)\n    } catch (error) {\n      // msgAlert({\n      //   heading: 'Change Password Failed with error: ' + error.message,\n      //   message:\n      //   variant: 'danger'\n      // })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Update profile</h3>\n        <Form onSubmit={onUpdateProfile}>\n          <Form.Group controlId='firstName'>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              name='firstName'\n              value={firstName}\n              type='text'\n              placeholder='First Name'\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='lastName'>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              name='lastName'\n              value={lastName}\n              type='text'\n              placeholder='Last Name'\n              onChange={(event) => setLastName(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nUpdate\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\n\nimport { createModule } from '../../../api/modules'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateModule = ({ msgAlert, user }) => {\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const location = useLocation()\n  const courseId = location.state.value\n\n  const onCreateModule = async (event) => {\n    event.preventDefault()\n    try {\n      await createModule(user, moduleName, moduleContent, courseId)\n      msgAlert({\n        heading: 'Module Creation Successful!',\n        message: `Module ${moduleName} Created Successfully!`,\n        variant: 'success'\n      })\n      setShouldNavigateBack(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Create Module Failed with error: ' + error.message,\n        message: 'Failed to create a new Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Module</h3>\n        <Form onSubmit={onCreateModule}>\n          <Form.Group controlId='moduleName'>\n            <Form.Label>Module Name</Form.Label>\n            <Form.Control\n              required\n              name='moduleName'\n              value={moduleName}\n              type='text'\n              placeholder='Module Name'\n              onChange={(event) => setModuleName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='moduleContent'>\n            <Form.Label>Module Content</Form.Label>\n            <Form.Control\n              required\n              name='moduleContent'\n              value={moduleContent}\n              type='text'\n              as='textarea'\n              rows='10'\n              placeholder='Module Content'\n              onChange={(event) => setModuleContent(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateModule\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nimport { getModuleById, editModule, deleteModule } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [moduleName, setModuleName] = useState('')\n  const [moduleContent, setModuleContent] = useState('')\n  const [showModuleEdit, setShowModuleEdit] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const [reRender, setReRender] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n      setModuleName(res.data.module.name)\n      setModuleContent(res.data.module.content)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [reRender])\n\n  const onEditModule = async (event) => {\n    event.preventDefault()\n    try {\n      await editModule(user, moduleId.id, moduleName, moduleContent, courseId)\n      setShowModuleEdit(false)\n      setReRender(true)\n      msgAlert({\n        heading: 'Module Edit Successful!',\n        message: `Module ${moduleName} Edited Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Edit Module Failed with error: ' + error.message,\n        message: 'Failed to edit the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onDelete = async (event) => {\n    event.preventDefault()\n    try {\n      await deleteModule(user, moduleId.id, courseId)\n      setShowModuleEdit(false)\n      setShouldNavigateBack(true)\n      msgAlert({\n        heading: 'Module Deletion Successful!',\n        message: `Module ${moduleName} Deleted Successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Module Failed with error: ' + error.message,\n        message: 'Failed to delete the Module',\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h2>{module.name}</h2>\n                <h5>{module.content}</h5>\n                <Button onClick={() => setShowModuleEdit(true)}>Edit</Button>\n                <Button variant='danger' onClick={onDelete}>\nDelete\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <Modal show={showModuleEdit} onHide={() => setShowModuleEdit(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Module Information</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId='moduleName'>\n                <FloatingLabel label='Module Name'>\n                  <Form.Control\n                    required\n                    name='moduleName'\n                    value={moduleName}\n                    type='text'\n                    placeholder='Module Name'\n                    onChange={(event) => setModuleName(event.target.value)}\n                  />\n                </FloatingLabel>\n              </Form.Group>\n              <Form.Group controlId='moduleContent'>\n                <FloatingLabel label='Module Content'>\n                  <Form.Control\n                    required\n                    name='moduleContent'\n                    value={moduleContent}\n                    type='text'\n                    as='textarea'\n                    rows='6'\n                    placeholder='Module Content'\n                    onChange={(event) =>\n                      setModuleContent(event.target.value)\n                    }\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='secondary'\n              onClick={() => setShowModuleEdit(false)}>\nClose\n            </Button>\n            <Button variant='primary' onClick={onEditModule}>\nSave Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useParams, Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport { getCourseById } from '../../../api/courses'\nimport { getModules } from '../../../api/modules'\n\nconst Course = ({ msgAlert, user, userType }) => {\n  const [course, setCourse] = useState([])\n  const [modules, setModules] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const { id } = useParams()\n  const courseId = { id }\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getCourseById(user, courseId.id)\n      setCourse(res.data.course)\n      try {\n        const resMod = await getModules(user, courseId.id)\n        setModules(resMod.data.modules)\n        setLoading(false)\n      } catch (error) {\n        console.error(error)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const renderedModules = modules.map((m) => {\n    return (\n      <li key={m.id}>\n        <Link to={`/courses/modules/${m.id}/`} state={{ value: courseId.id }}>\n          <h3 className='container shadow-lg'>{m.name}</h3>\n        </Link>\n        <hr />\n      </li>\n    )\n  })\n  const listModules = <ol className='container'>{renderedModules}</ol>\n\n  if (navigateBack) {\n    return <Navigate to='/courses/enrolled/' />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-3'>\n              <div className='container shadow'>\n                <h1>{course.name}</h1>\n                <h5>{course.description}</h5>\n                <br />\n                <br />\n              </div>\n              <br />\n            </div>\n\n            <div className='col-6 container'>\n              <h3>Modules:</h3>\n              {!loading\n                ? (\n                  listModules\n                )\n                : (\n                  <Spinner animation='border' variant='primary' />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Course\n","import React, { useEffect, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nimport { completeModule, getModuleById } from '../../../api/modules'\n\nconst Module = ({ msgAlert, user, userType }) => {\n  const [module, setModule] = useState([])\n  const [navigateBack, setShouldNavigateBack] = useState(false)\n  const { id } = useParams()\n  const moduleId = { id }\n  const location = useLocation()\n  const courseId = location.state.value\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(async () => {\n    try {\n      const res = await getModuleById(user, moduleId.id, courseId)\n      setModule(res.data.module)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const onCompleteModule = async () => {\n    try {\n      await completeModule(user, moduleId.id)\n      setShouldNavigateBack(true)\n    } catch {\n\n    }\n  }\n\n  if (navigateBack) {\n    return <Navigate to={`/courses/${courseId}/`} />\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <Button onClick={() => setShouldNavigateBack(true)}>Back</Button>\n        <br />\n        <br />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-12'>\n              <div className='container' style={{ textAlign: 'center' }}>\n                <h1>{module.name}</h1>\n                <hr />\n                <br />\n              </div>\n              <div>\n                <h5 style={{ textAlign: 'center' }}>{module.content}</h5>\n              </div>\n              <div>\n                <a style={{ position: 'absolute', bottom: '5vh', right: '5vw', textDecoration: 'underline', color: 'blue', cursor: 'pointer' }} onClick={() => onCompleteModule()}>Mark Completed</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Module\n","/* eslint-disable no-tabs */\nimport React, { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport Home from './components/Header/Home'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateCourse from './components/author/course/CreateCourse'\nimport ViewCourses from './components/author/course/ViewCourses'\nimport ViewCoursesEnrolled from './components/student/course/ViewCoursesEnrolled'\nimport ViewCourseIdAuthor from './components/author/course/ViewCourseId'\nimport Profile from './components/user/Profile'\nimport CreateModule from './components/author/module/CreateModule'\nimport ViewModuleId from './components/author/module/ViewModuleId'\nimport ViewCourseIdStudent from './components/student/course/ViewCourseId'\nimport ViewModuleIdStudent from './components/student/module/ViewModuleId'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  // const [isStudent, setIsStudent] = useState(null)\n  // const [isTutor, setIsTutor] = useState(null)\n  // const [isAuthor, setIsAuthor] = useState(null)\n  const [userType, setUserType] = useState(null)\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  useEffect(() => {\n    if (user) {\n      if (user.isStudent) {\n        // setIsStudent(true)\n        setUserType('Student')\n      } else if (user.isTutor) {\n        // setIsTutor(true)\n        setUserType('Tutor')\n      } else if (user.isAuthor) {\n        // setIsAuthor(true)\n        setUserType('Author')\n      }\n    }\n  }, [user])\n\n  // Student Routes\n  const studentRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdStudent\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/enrolled/'\n        element={<ViewCoursesEnrolled user={user} userType={userType} />}\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleIdStudent msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n    </>\n  )\n\n  // Tutor Routes\n  const tutorRoutes = (\n    <>\n\n    </>\n  )\n\n  // Author Routes\n  const authorRoutes = (\n    <>\n      <Route\n        path='/courses/:id/'\n        element={\n          <ViewCourseIdAuthor\n            msgAlert={msgAlert}\n            user={user}\n            userType={userType}\n          />\n        }\n      />\n      <Route\n        path='/courses/modules/:id/'\n        element={\n          <ViewModuleId msgAlert={msgAlert} user={user} userType={userType} />\n        }\n      />\n    </>\n  )\n\n  return (\n    <>\n      <Header user={user} userType={userType} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          {/* Auth Routes */}\n          <Route\n            path='/sign-up/'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in/'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out/'\n            element={\n              <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />\n            }\n          />\n          <Route\n            path='/change-password/'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/profile/'\n            element={<Profile msgAlert={msgAlert} user={user} />}\n          />\n          {/* Generic Routes */}\n          <Route path='/' element={<Home />} />\n          <Route\n            path='/courses/'\n            element={<ViewCourses user={user} userType={userType} />}\n          />\n          {userType === 'Student'\n            ? studentRoutes\n            : userType === 'Tutor'\n              ? tutorRoutes\n              : userType === 'Author'\n                ? authorRoutes\n                : ''}\n          {/* Author Routes */}\n          <Route\n            path='/courses/create/'\n            element={<CreateCourse msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/courses/:id/modules/create/'\n            element={<CreateModule msgAlert={msgAlert} user={user} />}\n          />\n          {/* Tutor Routes */}\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}